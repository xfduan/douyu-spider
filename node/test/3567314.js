const eval = (str) => {
  console.log(str)
  return () => {}
}
const CryptoJS = require('crypto-js')

var n578b7114d8f7f = [0x367e448, 0x7cadf04, 0x99e9f45f, 0xbad5708b, 0xf763b613, 0xd6ee0539, 0x497e130f, 0x94a6912c, 0x9427e366, 0xc5268d23, 0x84885019, 0x3b172cd9, 0xce75225c, 0xb3eac818, 0x3da6f931, 0xcbe6c0fa, 0x384c1312, 0x8edadbd1, 0x8e0d6994, 0x6f835c40, 0x8364b59f, 0x81b2ae8f, 0x34b19429, 0x4d7e01c8, 0x463630b7, 0xb9464f66, 0x7855ba01, 0x91780f14, 0xa207280c, 0x63924df1, 0x12b00482, 0x909a2482, 0xc462a818, 0xdb0947a1, 0xcc5ff36c, 0xaa872e5e, 0x6f7cc7f2, 0x22d4c78f, 0xe3c2a613, 0xaceba24f, 0x7d20eaba, 0x57aa635f, 0x8d97d42f, 0xd9224630, 0xbd76388d, 0x12335514, 0xd715b6ad, 0x2ddc6d2f, 0x69570f, 0x10bda8e0, 0x42616f07, 0x917ec0e9, 0x6fcaee86, 0x30117d43, 0x4f0bb9ae, 0x88379721, 0x708d95db, 0x44134c3b, 0xafab3f49, 0xc861cc92, 0xa7cd6a8f, 0x5e382b9d, 0x9a682fc1, 0x7d787170, 0xcb9ac0f4, 0xb4fac7fc, 0x9f78d96b, 0xd9a74aa9, 0x6464cb59, 0x76c6df59, 0x72a7ff15, 0x6dfa677, 0xfcc8c2b7, 0x921f7ccd, 0xd87946c, 0x7f458931, 0xf97be911, 0x2a55f4b7, 0x8504a400, 0xe45e11f0, 0xa84d29a7, 0x45f86f63, 0xd6d07fd6, 0xecac9dd3, 0x8ae083e1, 0xb188b0c8, 0x634bbd5d, 0xbae38cbb, 0x80f8ddd3, 0xee73ee3, 0x12a7b915, 0xcd324604, 0xd1a4213f, 0x63b06e2f, 0xb6d41e7b, 0x5cd58cc6, 0x75374762, 0x33498ee9, 0xa7335c02, 0xd7b29a63, 0x978e4ad2, 0x46ae5f36, 0xb641f6c3, 0xf4425ccb, 0xd292ba0e, 0x2c1cdc46, 0xe9f3831e, 0x6bfc8883, 0xcb7530ac, 0xe2687145, 0xdbf5308f, 0x7829e19b, 0xfc3c4f92, 0x24d89e72, 0xa19eec19, 0x53566116, 0xb5777e7e, 0x2a1db3c5, 0x98737eb4, 0xe3c05f95, 0x46f18871, 0x33669502, 0x8387530, 0xd4da56c2, 0xb5b391e8, 0x1c89032d, 0x424d2900, 0x2373ff44, 0x8ead1c5, 0xf43d146f, 0x675f32f4, 0x55a2c709, 0xfe8537f0, 0x9c7a8f32, 0x3e8607c3, 0x758c9f94, 0x33dddbb2, 0xb75678af, 0x331632dd, 0x2c7bac4c, 0xcea8d033, 0x7a52aad8, 0xff21fbc7, 0xc9beff9a, 0x40ca9a56, 0x22bd0994, 0xd7b48aa0, 0x4ea8e32d, 0x9d484ff2, 0x2d7fcd90, 0x5b96f9df, 0xc7250629, 0x18e1b6a, 0xd2d77fec, 0x5fa7dfb, 0x877ed92a, 0x563443ef, 0x2b41908b, 0xac9aee38, 0xc8d7f753, 0x1bc2022f, 0x82387bce, 0xa01a2774, 0x755a4322, 0x5114743b, 0x4b378ef3, 0xc34f5b64, 0x92d51a9d, 0xc44d83d3, 0x3e61ee01, 0x2effaf64, 0x1f45dc9b, 0x883153a0, 0xe0db911d, 0xa93a1bf2, 0x91859d1a, 0xfe8289d7, 0xf3313d6c, 0xb5001dfe, 0x6a0d4892, 0x97c04779, 0x875c26b4, 0xb7128ba2, 0x28f5d910, 0x6feff45a, 0x718d962f, 0xb1974d11, 0x29cf61e8, 0x5ec35ceb, 0x53c028a0, 0xb249e2a, 0x2a155f4f, 0xb300419d, 0xc155c119, 0x876b95c1, 0xa8b6ff10, 0xa6ab7a2e, 0x357be907, 0x9e2829ef, 0xda09a264, 0x8c4bad0b, 0x8f2e26df, 0x58748583, 0x3a20ce4f, 0xa6aba22f, 0x488e13fa, 0xa78cf44a, 0xbfe46022, 0x2a30f217, 0xd78ead49, 0xd4d6ba12, 0xe88b0565, 0x231e666c, 0xce2aca0f, 0x8484231c, 0x491b129a, 0x5d97f3be, 0x26066206, 0x5f96a85c, 0xf263750c, 0x81afc872, 0x58dd74b3, 0xd8e576f0, 0x2b17bc04, 0xd4a7a797, 0x37de7b5, 0xe6e6b849, 0x9221b5f7, 0x6642fe1b, 0xda8ebf53, 0x5c07f214, 0xdd5f8360, 0xc1e47f27, 0xe1f71fa3, 0x12730058, 0x1f54271, 0xa1ed9b8b, 0x2271a7c, 0xc69c7559, 0x5e471a5f, 0xfdf03fc7, 0xb910bdc9, 0xa3e4f13e, 0xd251a0f, 0x1fdf1094, 0xdf5df691, 0xba7db23e, 0xb8502382, 0x28d0ace3, 0x5f42341a, 0x2f154a7d, 0x456b9ff4, 0xe199d94e, 0xb17c0ef, 0x781560b2, 0x3db21e67, 0x2a3aec7b, 0x543b7176, 0xe5b5d7cd, 0xdd85473a, 0x3e78c1ce, 0x44c36bc0, 0xb1e706f1, 0xa8228d08, 0xe54270f, 0xbf79fff7, 0x41c73d47, 0x5dae96ae, 0x3d9f06e1, 0x20892a71, 0x80d8a2a0, 0x2e99bb22, 0x5e659539, 0xb784678e, 0x4b462afc, 0xa06700d2, 0xd570cd7c, 0x252b45fa, 0x91d2da90, 0x6f4403fb, 0xae0e5ad4, 0xb2381f28, 0xdf8f8bc3, 0x3b5d38cf, 0xa5d3e028, 0x3fbfb9b5, 0x815fd6b9, 0xcb353f74, 0xfe0a2582, 0xbe7db644, 0xabe37782, 0x9c00f038, 0x813efe72, 0x9fc4e959, 0x9195355c, 0x5b2c8262, 0x66d3021e, 0x3a4c3bf2, 0xb42247d4, 0xb72ffba6, 0x75889153, 0x236967ad, 0x1c849c1d, 0x678e4493, 0xee578ce9, 0x8e446ec7, 0xde600969, 0x13d4ac7a, 0x82585ffb, 0x16ffda31, 0xbee345a, 0xea9350f4, 0x2a226434, 0x134cfb29, 0x127328cd, 0x8e633189, 0x902c28f8, 0x926489a7, 0xb607e882, 0xda992a4a, 0xe45b9992, 0x3d5d19b3, 0xfc623201, 0xcac90d8e, 0x4c38ce70, 0x9736fbf5, 0x39f0bb3f, 0xdc3aa383, 0xb84836fc, 0x19ab9dc6, 0x79b29bc6, 0x8ae272db, 0x2f4f0c64, 0xaf0ebff4, 0xf2ef958e, 0x93724975, 0xe494e69a, 0x1eb93d15, 0xe659e151, 0xb8da7a84, 0x8fb9337e, 0xc05f163e, 0x5bc13e73, 0xdb2a83f9, 0x2e6b73c4, 0xf04028, 0xa298429d, 0x2d5180f7, 0xa4a9a87a, 0x7e609eb5, 0x830a095a, 0x1a114d3f, 0x78ee26a5, 0xfd1d3d86, 0x8813645d, 0x7b55791c, 0xac3ffe5a, 0x66883ce3];

function ub98484234(n578b7114d8f7f0, n578b7114d8f7f1, n578b7114d8f7f2) {
  var rk = [29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33, 10, 29, 33, 38, 35, 19, 12, 11, 33];
  var k2 = [0x131dbf0f, 0x7f7af3cd];
  var lk = [0x131dbf0f, 0x7f7af3cd];
  var v = n578b7114d8f7f.slice(0);
  var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
  for (var O = 0; O < 358; O++) {
    v[O] ^= 0x1fbb6c91;
  }
  v[1] = (v[1] << (lk[1] % 16)) | (v[1] >>> (32 - (lk[1] % 16)));
  v[0] += lk[0];
  v[3] -= lk[1];
  v[2] += lk[0];
  v[5] -= lk[1];
  v[4] += lk[0];
  v[7] ^= lk[1];
  v[6] -= lk[0];
  v[9] -= lk[1];
  v[8] -= lk[0];
  v[11] += lk[1];
  v[10] = (v[10] >>> (lk[0] % 16)) | (v[10] << (32 - (lk[0] % 16)));
  v[13] -= lk[1];
  v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
  v[15] -= lk[1];
  v[14] += lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] = (v[19] << (lk[1] % 16)) | (v[19] >>> (32 - (lk[1] % 16)));
  v[18] += lk[0];
  v[21] -= lk[1];
  v[20] += lk[0];
  v[23] -= lk[1];
  v[22] += lk[0];
  v[25] ^= lk[1];
  v[24] -= lk[0];
  v[27] -= lk[1];
  v[26] -= lk[0];
  v[29] += lk[1];
  v[28] = (v[28] >>> (lk[0] % 16)) | (v[28] << (32 - (lk[0] % 16)));
  v[31] -= lk[1];
  v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
  v[33] -= lk[1];
  v[32] += lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] = (v[37] << (lk[1] % 16)) | (v[37] >>> (32 - (lk[1] % 16)));
  v[36] += lk[0];
  v[39] -= lk[1];
  v[38] += lk[0];
  v[41] -= lk[1];
  v[40] += lk[0];
  v[43] ^= lk[1];
  v[42] -= lk[0];
  v[45] -= lk[1];
  v[44] -= lk[0];
  v[47] += lk[1];
  v[46] = (v[46] >>> (lk[0] % 16)) | (v[46] << (32 - (lk[0] % 16)));
  v[49] -= lk[1];
  v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
  v[51] -= lk[1];
  v[50] += lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] = (v[55] << (lk[1] % 16)) | (v[55] >>> (32 - (lk[1] % 16)));
  v[54] += lk[0];
  v[57] -= lk[1];
  v[56] += lk[0];
  v[59] -= lk[1];
  v[58] += lk[0];
  v[61] ^= lk[1];
  v[60] -= lk[0];
  v[63] -= lk[1];
  v[62] -= lk[0];
  v[65] += lk[1];
  v[64] = (v[64] >>> (lk[0] % 16)) | (v[64] << (32 - (lk[0] % 16)));
  v[67] -= lk[1];
  v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
  v[69] -= lk[1];
  v[68] += lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] = (v[73] << (lk[1] % 16)) | (v[73] >>> (32 - (lk[1] % 16)));
  v[72] += lk[0];
  v[75] -= lk[1];
  v[74] += lk[0];
  v[77] -= lk[1];
  v[76] += lk[0];
  v[79] ^= lk[1];
  v[78] -= lk[0];
  v[81] -= lk[1];
  v[80] -= lk[0];
  v[83] += lk[1];
  v[82] = (v[82] >>> (lk[0] % 16)) | (v[82] << (32 - (lk[0] % 16)));
  v[85] -= lk[1];
  v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
  v[87] -= lk[1];
  v[86] += lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] = (v[91] << (lk[1] % 16)) | (v[91] >>> (32 - (lk[1] % 16)));
  v[90] += lk[0];
  v[93] -= lk[1];
  v[92] += lk[0];
  v[95] -= lk[1];
  v[94] += lk[0];
  v[97] ^= lk[1];
  v[96] -= lk[0];
  v[99] -= lk[1];
  v[98] -= lk[0];
  v[101] += lk[1];
  v[100] = (v[100] >>> (lk[0] % 16)) | (v[100] << (32 - (lk[0] % 16)));
  v[103] -= lk[1];
  v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
  v[105] -= lk[1];
  v[104] += lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] = (v[109] << (lk[1] % 16)) | (v[109] >>> (32 - (lk[1] % 16)));
  v[108] += lk[0];
  v[111] -= lk[1];
  v[110] += lk[0];
  v[113] -= lk[1];
  v[112] += lk[0];
  v[115] ^= lk[1];
  v[114] -= lk[0];
  v[117] -= lk[1];
  v[116] -= lk[0];
  v[119] += lk[1];
  v[118] = (v[118] >>> (lk[0] % 16)) | (v[118] << (32 - (lk[0] % 16)));
  v[121] -= lk[1];
  v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
  v[123] -= lk[1];
  v[122] += lk[0];
  v[125] -= lk[1];
  v[124] -= lk[0];
  v[127] = (v[127] << (lk[1] % 16)) | (v[127] >>> (32 - (lk[1] % 16)));
  v[126] += lk[0];
  v[129] -= lk[1];
  v[128] += lk[0];
  v[131] -= lk[1];
  v[130] += lk[0];
  v[133] ^= lk[1];
  v[132] -= lk[0];
  v[135] -= lk[1];
  v[134] -= lk[0];
  v[137] += lk[1];
  v[136] = (v[136] >>> (lk[0] % 16)) | (v[136] << (32 - (lk[0] % 16)));
  v[139] -= lk[1];
  v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)));
  v[141] -= lk[1];
  v[140] += lk[0];
  v[143] -= lk[1];
  v[142] -= lk[0];
  v[145] = (v[145] << (lk[1] % 16)) | (v[145] >>> (32 - (lk[1] % 16)));
  v[144] += lk[0];
  v[147] -= lk[1];
  v[146] += lk[0];
  v[149] -= lk[1];
  v[148] += lk[0];
  v[151] ^= lk[1];
  v[150] -= lk[0];
  v[153] -= lk[1];
  v[152] -= lk[0];
  v[155] += lk[1];
  v[154] = (v[154] >>> (lk[0] % 16)) | (v[154] << (32 - (lk[0] % 16)));
  v[157] -= lk[1];
  v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)));
  v[159] -= lk[1];
  v[158] += lk[0];
  v[161] -= lk[1];
  v[160] -= lk[0];
  v[163] = (v[163] << (lk[1] % 16)) | (v[163] >>> (32 - (lk[1] % 16)));
  v[162] += lk[0];
  v[165] -= lk[1];
  v[164] += lk[0];
  v[167] -= lk[1];
  v[166] += lk[0];
  v[169] ^= lk[1];
  v[168] -= lk[0];
  v[171] -= lk[1];
  v[170] -= lk[0];
  v[173] += lk[1];
  v[172] = (v[172] >>> (lk[0] % 16)) | (v[172] << (32 - (lk[0] % 16)));
  v[175] -= lk[1];
  v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)));
  v[177] -= lk[1];
  v[176] += lk[0];
  v[179] -= lk[1];
  v[178] -= lk[0];
  v[181] = (v[181] << (lk[1] % 16)) | (v[181] >>> (32 - (lk[1] % 16)));
  v[180] += lk[0];
  v[183] -= lk[1];
  v[182] += lk[0];
  v[185] -= lk[1];
  v[184] += lk[0];
  v[187] ^= lk[1];
  v[186] -= lk[0];
  v[189] -= lk[1];
  v[188] -= lk[0];
  v[191] += lk[1];
  v[190] = (v[190] >>> (lk[0] % 16)) | (v[190] << (32 - (lk[0] % 16)));
  v[193] -= lk[1];
  v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)));
  v[195] -= lk[1];
  v[194] += lk[0];
  v[197] -= lk[1];
  v[196] -= lk[0];
  v[199] = (v[199] << (lk[1] % 16)) | (v[199] >>> (32 - (lk[1] % 16)));
  v[198] += lk[0];
  v[201] -= lk[1];
  v[200] += lk[0];
  v[203] -= lk[1];
  v[202] += lk[0];
  v[205] ^= lk[1];
  v[204] -= lk[0];
  v[207] -= lk[1];
  v[206] -= lk[0];
  v[209] += lk[1];
  v[208] = (v[208] >>> (lk[0] % 16)) | (v[208] << (32 - (lk[0] % 16)));
  v[211] -= lk[1];
  v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)));
  v[213] -= lk[1];
  v[212] += lk[0];
  v[215] -= lk[1];
  v[214] -= lk[0];
  v[217] = (v[217] << (lk[1] % 16)) | (v[217] >>> (32 - (lk[1] % 16)));
  v[216] += lk[0];
  v[219] -= lk[1];
  v[218] += lk[0];
  v[221] -= lk[1];
  v[220] += lk[0];
  v[223] ^= lk[1];
  v[222] -= lk[0];
  v[225] -= lk[1];
  v[224] -= lk[0];
  v[227] += lk[1];
  v[226] = (v[226] >>> (lk[0] % 16)) | (v[226] << (32 - (lk[0] % 16)));
  v[229] -= lk[1];
  v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)));
  v[231] -= lk[1];
  v[230] += lk[0];
  v[233] -= lk[1];
  v[232] -= lk[0];
  v[235] = (v[235] << (lk[1] % 16)) | (v[235] >>> (32 - (lk[1] % 16)));
  v[234] += lk[0];
  v[237] -= lk[1];
  v[236] += lk[0];
  v[239] -= lk[1];
  v[238] += lk[0];
  v[241] ^= lk[1];
  v[240] -= lk[0];
  v[243] -= lk[1];
  v[242] -= lk[0];
  v[245] += lk[1];
  v[244] = (v[244] >>> (lk[0] % 16)) | (v[244] << (32 - (lk[0] % 16)));
  v[247] -= lk[1];
  v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)));
  v[249] -= lk[1];
  v[248] += lk[0];
  v[251] -= lk[1];
  v[250] -= lk[0];
  v[253] = (v[253] << (lk[1] % 16)) | (v[253] >>> (32 - (lk[1] % 16)));
  v[252] += lk[0];
  v[255] -= lk[1];
  v[254] += lk[0];
  v[257] -= lk[1];
  v[256] += lk[0];
  v[259] ^= lk[1];
  v[258] -= lk[0];
  v[261] -= lk[1];
  v[260] -= lk[0];
  v[263] += lk[1];
  v[262] = (v[262] >>> (lk[0] % 16)) | (v[262] << (32 - (lk[0] % 16)));
  v[265] -= lk[1];
  v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)));
  v[267] -= lk[1];
  v[266] += lk[0];
  v[269] -= lk[1];
  v[268] -= lk[0];
  v[271] = (v[271] << (lk[1] % 16)) | (v[271] >>> (32 - (lk[1] % 16)));
  v[270] += lk[0];
  v[273] -= lk[1];
  v[272] += lk[0];
  v[275] -= lk[1];
  v[274] += lk[0];
  v[277] ^= lk[1];
  v[276] -= lk[0];
  v[279] -= lk[1];
  v[278] -= lk[0];
  v[281] += lk[1];
  v[280] = (v[280] >>> (lk[0] % 16)) | (v[280] << (32 - (lk[0] % 16)));
  v[283] -= lk[1];
  v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)));
  v[285] -= lk[1];
  v[284] += lk[0];
  v[287] -= lk[1];
  v[286] -= lk[0];
  v[289] = (v[289] << (lk[1] % 16)) | (v[289] >>> (32 - (lk[1] % 16)));
  v[288] += lk[0];
  v[291] -= lk[1];
  v[290] += lk[0];
  v[293] -= lk[1];
  v[292] += lk[0];
  v[295] ^= lk[1];
  v[294] -= lk[0];
  v[297] -= lk[1];
  v[296] -= lk[0];
  v[299] += lk[1];
  v[298] = (v[298] >>> (lk[0] % 16)) | (v[298] << (32 - (lk[0] % 16)));
  v[301] -= lk[1];
  v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)));
  v[303] -= lk[1];
  v[302] += lk[0];
  v[305] -= lk[1];
  v[304] -= lk[0];
  v[307] = (v[307] << (lk[1] % 16)) | (v[307] >>> (32 - (lk[1] % 16)));
  v[306] += lk[0];
  v[309] -= lk[1];
  v[308] += lk[0];
  v[311] -= lk[1];
  v[310] += lk[0];
  v[313] ^= lk[1];
  v[312] -= lk[0];
  v[315] -= lk[1];
  v[314] -= lk[0];
  v[317] += lk[1];
  v[316] = (v[316] >>> (lk[0] % 16)) | (v[316] << (32 - (lk[0] % 16)));
  v[319] -= lk[1];
  v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)));
  v[321] -= lk[1];
  v[320] += lk[0];
  v[323] -= lk[1];
  v[322] -= lk[0];
  v[325] = (v[325] << (lk[1] % 16)) | (v[325] >>> (32 - (lk[1] % 16)));
  v[324] += lk[0];
  v[327] -= lk[1];
  v[326] += lk[0];
  v[329] -= lk[1];
  v[328] += lk[0];
  v[331] ^= lk[1];
  v[330] -= lk[0];
  v[333] -= lk[1];
  v[332] -= lk[0];
  v[335] += lk[1];
  v[334] = (v[334] >>> (lk[0] % 16)) | (v[334] << (32 - (lk[0] % 16)));
  v[337] -= lk[1];
  v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)));
  v[339] -= lk[1];
  v[338] += lk[0];
  v[341] -= lk[1];
  v[340] -= lk[0];
  v[343] = (v[343] << (lk[1] % 16)) | (v[343] >>> (32 - (lk[1] % 16)));
  v[342] += lk[0];
  v[345] -= lk[1];
  v[344] += lk[0];
  v[347] -= lk[1];
  v[346] += lk[0];
  v[349] ^= lk[1];
  v[348] -= lk[0];
  v[351] -= lk[1];
  v[350] -= lk[0];
  v[353] += lk[1];
  v[352] = (v[352] >>> (lk[0] % 16)) | (v[352] << (32 - (lk[0] % 16)));
  v[355] -= lk[1];
  v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)));
  v[357] -= lk[1];
  v[356] += lk[0];
  for (var I = 0; I < 358; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 357; O > 0; O--) {
    v[O] ^= v[O - 1];
  }
  v[0] ^= 0x1fbb6c91;
  var strc = "";
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(n578b7114d8f7f0, n578b7114d8f7f1, n578b7114d8f7f2);
}

ub98484234(1,2,3)

function getSign(xx0, xx1, xx2) {
  var cb = xx0 + xx1 + xx2 + '220120190604'
  var rb = CryptoJS.MD5(cb).toString()
  var re = []
  for (var i = 0; i < rb.length / 8; i++) re[i] = (parseInt(rb.substr(i * 8, 2), 16) & 0xff) |
    ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) | ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) |
    (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24)
  var k2 = [0x6cab48e4, 0xa4e5bc8, 0x28bec0, 0x33afa8d0]
  for (var I = 0; I < 2; I++) {
    var v0 = re[I * 2], v1 = re[I * 2 + 1], sum = 0, i = 0
    var delta = 0x9e3779b9
    for (i = 0; i < 32; i++) {
      sum += delta
      v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1])
      v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3])
    }
    re[I * 2] = v0
    re[I * 2 + 1] = v1
  }
  re[0] -= k2[0]
  re[0] = (re[0] >>> (k2[2] % 16)) | (re[0] << (32 - (k2[2] % 16)))
  re[0] = (re[0] >>> (k2[0] % 16)) | (re[0] << (32 - (k2[0] % 16)))
  re[0] ^= k2[2]
  re[1] -= k2[1]
  re[1] += k2[3]
  re[1] = (re[1] << (k2[3] % 16)) | (re[1] >>> (32 - (k2[3] % 16)))
  re[2] -= k2[0]
  re[2] += k2[2]
  re[2] -= k2[2]
  re[2] += k2[2]
  re[3] += k2[1]
  re[3] ^= k2[3]
  re[3] = (re[3] >>> (k2[3] % 16)) | (re[3] << (32 - (k2[3] % 16)))
  re[0] += k2[0]
  re[0] += k2[2]
  re[0] += k2[0]
  re[0] += k2[2]
  re[1] = (re[1] << (k2[1] % 16)) | (re[1] >>> (32 - (k2[1] % 16)))
  re[1] -= k2[3]
  re[1] -= k2[1]
  re[1] += k2[3]
  re[2] = (re[2] << (k2[0] % 16)) | (re[2] >>> (32 - (k2[0] % 16)))
  re[2] += k2[2]
  re[2] -= k2[2]
  re[3] -= k2[1]
  re[3] += k2[3]
  re[3] += k2[1]
  re[3] += k2[3]
  {
    var hc = '0123456789abcdef'.split('')
    for (var i = 0; i < re.length; i++) {
      var j = 0, s = ''
      for (; j < 4; j++) s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15]
      re[i] = s
    }
    re = re.join('')
  }
  var rt = 'v=220120190604' + '&did=' + xx1 + '&tt=' + xx2 + '&sign=' + re
  return rt
}

console.log(getSign(3567314, "6855e8f7c977455b9f42a82100061501", 1559630092))
