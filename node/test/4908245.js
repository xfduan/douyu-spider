const eval = (str) => {
  console.log(str)
  return () => {}
}

var xef8ba3b263b00e0d85eb = [0xb25f5857, 0x5c2360f0, 0x822208c4, 0x3b963de5, 0xe5d59772, 0x59aa5f06, 0xe16cfcc, 0x6f0807f8, 0xac19d6ac, 0xb23eb9da, 0x847832d4, 0x843a8483, 0x85aa2bad, 0xf976b52f, 0xca85e8e3, 0xa7c69461, 0x10786ffa, 0x6851779a, 0x565002e3, 0x3c34af38, 0x14c2a0b5, 0x574d5ac5, 0x6fe4710a, 0x824eb23a, 0xe5f61cb0, 0x46ad51bc, 0x10cc2ed3, 0x9b0b6bbe, 0x9f93a3c6, 0x575ef7fe, 0xb4747c54, 0xb7d8279c, 0x9378d5f6, 0xef0b8f66, 0x94e80c57, 0xdde14203, 0xf5696e23, 0xa3d40448, 0xf36b5736, 0xf0b8ef8, 0x7ac9e868, 0x561628a4, 0x797e8e54, 0x44e9859, 0xcc8895ca, 0x444cedde, 0xc7a5bc8e, 0xf9404832, 0x8bc89a4f, 0x2f5b17a8, 0x5983d72c, 0xe62d9ab, 0xee29250a, 0x2842cf47, 0x28383ad2, 0x1c6ba2d, 0x86bf347f, 0xa7896af3, 0xa030bff3, 0x486b8797, 0x288700a2, 0xff9c7379, 0xc1aece38, 0xf5af856b, 0x1bb9be5d, 0x15b81d2b, 0xf6b26a55, 0x6270fac6, 0x9aea50e4, 0x10bcf92c, 0x95b28c35, 0xeccacc36, 0x78346dd5, 0x31ea6f28, 0x4f2de106, 0x44f94d42, 0x601ccaeb, 0x828c11, 0x8ba39be2, 0x1d48f135, 0xa3e28050, 0x59b3253a, 0xc0860a48, 0x48a83216, 0xf2ad3576, 0x3e6f2039, 0x8f7e4f77, 0xd690291, 0x744fb7d9, 0xaf6c73dd, 0x79785b0b, 0x125c8d9e, 0x96dcbc40, 0x4ce4fc45, 0xa48319e1, 0x22c567ef, 0x93cde614, 0xa55c739, 0x21ba64a1, 0xcba3f111, 0xb7f03cdb, 0xd75aaa75, 0x6d34dd85, 0x927ec7f4, 0x12457e1d, 0xcac80d05, 0x4da1cbfe, 0xc591fe1f, 0xf477b7bc, 0x84ce2439, 0xf5c843e2, 0x67782f8e, 0x85788d32, 0x14c9ebe4, 0x3711b1b7, 0x7932035d, 0x53932da1, 0x820d6589, 0x39e61634, 0x63a9a9fd, 0x63da3440, 0x4ebcb58c, 0x18b78962, 0x567b51a4, 0x458bdd8c, 0xccc8d207, 0xefc4ca7c, 0xfa24346c, 0x7f5a3ac0, 0x3685a7ba, 0x4fe82450, 0x62c30738, 0x1f066283, 0xc38cc15f, 0xe3b9e62e, 0x3aad77ed, 0x2499fef6, 0x868fd5ef, 0x1d05bfb1, 0x89f06af, 0xc8e77598, 0x1a26f741, 0xc7ec3780, 0x3a8d2227, 0xed3081f6, 0x85db2a5e, 0xe9a4c1a6, 0x5f97114f, 0x2f753acc, 0xcfe153cf, 0x67ebc6c1, 0xe4bdb9c8, 0x2a5b6f9b, 0xbb2793df, 0xded39a8e, 0x6dc7c9c, 0x56e4e3f0, 0x94502fc, 0xfe3a07e, 0x2b95666a, 0x9f91a7d8, 0xfeea2c56, 0x50fae6b2, 0xff2c7474, 0x2dfb8861, 0x86b34f2d, 0xe5c58098, 0x2339098a, 0xb04daf1f, 0xcddf4faf, 0xd3b4002f, 0x86dd1324, 0xd8fef82b, 0x1dcfdb0e, 0x1e6a7245, 0xea8c8c16, 0xe34fbb5e, 0xb8a6c3fd, 0xde03e429, 0x659c3c98, 0x8e241eea, 0x4b335b40, 0x4a9273be, 0x8b1c2d8f, 0x915c71ab, 0xd3a5af26, 0xdcb3ace8, 0xef088811, 0x9909bbfb, 0xd838d278, 0xe890fbf9, 0xa465caef, 0x7863fdae, 0x3b87fa01, 0xa1ea3c93, 0xb369d60d, 0x9f92dd08, 0x2b770889, 0x4cfa73b9, 0xb3155eab, 0xc5ea1655, 0xb8228bb4, 0x340a0961, 0x439f92e6, 0x7abda33a, 0x6c1113c5, 0xd22862dd, 0x5e108251, 0xa793bcf6, 0x81ec69ab, 0x48e1d2cb, 0xbdcfeb8d, 0x127706bf, 0x92624fb6, 0xbe51da55, 0x98c5a1f1, 0x75f2f6ab, 0xad40415a, 0xdf541e3a, 0x11132c0f, 0x5ac58b3a, 0x2dd72519, 0x296d2787, 0xca7c864e, 0x6f4b5b79, 0x991f68ec, 0x45efe000, 0x80c00de5, 0xd54ea100, 0xf96c5d73, 0xfcd2a616, 0x7a2e5787, 0x109bcaba, 0x1cb7bfa0, 0x31d4b5b, 0x1c9e3662, 0x49a90852, 0xe526e2a2, 0x275d4c1e, 0xb5261a1a, 0x823064e, 0x17ba9a2, 0x2c0762df, 0x2f5715ff, 0xfaf81af7, 0x85d45326, 0x3ce8bdf9, 0xdc57e067, 0x265adf1b, 0xedaf1d54, 0xc26bbaf, 0xbaeefc45, 0xc316ef3e, 0x89d413c9, 0xb8d7ab52, 0x57e1b905, 0x41993b72, 0x200c647b, 0x118d9401, 0xa03b71a6, 0x45ea9f83, 0xb47b8e0a, 0x784359a7, 0xf6f13a7e, 0xb191f561, 0x7ea27277, 0xc53a206f, 0x9f6daa90, 0x78b2b866, 0xc9569fe0, 0xdadbe468, 0x702adc9b, 0x55973580, 0xe480d499, 0x7576a2e9, 0xcdd075f6, 0x17fd04bb, 0xc0f99f47, 0xa73c56dd, 0x29455fb4, 0x4f002baa, 0xdc2a4dc2, 0x34bac303, 0x4e16b5b2, 0x80f5ca80, 0x7d93c7de, 0x59a18790, 0x8d339e1b, 0xc16b38a4, 0xc81755f6, 0x8ca2f3c0, 0xef7d2341, 0x1dc12d2d, 0x1024229f, 0x7040a0e5, 0x264134ea, 0x731540cb, 0xd953f8ca, 0x32c6f8ab, 0x3a0a4135, 0x9f3b5a0c, 0x348765ec, 0x252f97e8, 0xf25de744, 0xda19652d, 0x3a53f7b3, 0x39277d93, 0xaa7ea27a, 0x95843214, 0x8e5ea739, 0xed428ba3, 0xa2a5146d, 0x21f25693, 0xdb37a923, 0x1ce54317, 0x2d2d8c72, 0xb4d7aedd, 0x7fee0857, 0x40b16021, 0xe7c66cb8, 0xce8cdd84, 0x899c39d5, 0xc721810d, 0x5aed5784, 0xfbbdd23f, 0xf7cd1b3c, 0x171d2559, 0x42e2370b, 0xc31f3662, 0xbc0b07c9, 0xf096b878, 0x4d121759, 0xa3bed850, 0x99d42783, 0x8d0c2916, 0x1a12c82c, 0x82e8a143, 0x2d4e5bc7, 0x202d61e1, 0x51a1c088, 0xa28b8909, 0x522bbca6, 0x5d684f9b, 0xf82651f7, 0x1e52de8f, 0x8f63b018, 0xa5acf30e, 0xb5dc723c, 0x3842c257, 0x5ab4612d, 0x5d8efdfe, 0x19f6bef0, 0xb1f4c93, 0x73294788, 0x2f13174c, 0x8a244783, 0x7137f07, 0xd76620a6];

function ub98484234(xef8ba3b263b00e0d85eb0, xef8ba3b263b00e0d85eb1, xef8ba3b263b00e0d85eb2) {
  var rk = [12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20, 10, 12, 26, 33, 19, 20, 40, 29, 20];
  var k2 = [0x729e74be, 0x7f7af3cd];
  var lk = [0x729e74be, 0x7f7af3cd];
  var v = xef8ba3b263b00e0d85eb.slice(0);
  var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
  for (var O = 0; O < 358; O++) {
    v[O] ^= 0x3b545075;
  }
  v[1] += lk[1];
  v[0] += lk[0];
  v[3] += lk[1];
  v[2] += lk[0];
  v[5] ^= lk[1];
  v[4] += lk[0];
  v[7] ^= lk[1];
  v[6] -= lk[0];
  v[9] ^= lk[1];
  v[8] -= lk[0];
  v[11] -= lk[1];
  v[10] = (v[10] >>> (lk[0] % 16)) | (v[10] << (32 - (lk[0] % 16)));
  v[13] = (v[13] << (lk[1] % 16)) | (v[13] >>> (32 - (lk[1] % 16)));
  v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
  v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16)));
  v[14] += lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] += lk[1];
  v[18] += lk[0];
  v[21] += lk[1];
  v[20] += lk[0];
  v[23] ^= lk[1];
  v[22] += lk[0];
  v[25] ^= lk[1];
  v[24] -= lk[0];
  v[27] ^= lk[1];
  v[26] -= lk[0];
  v[29] -= lk[1];
  v[28] = (v[28] >>> (lk[0] % 16)) | (v[28] << (32 - (lk[0] % 16)));
  v[31] = (v[31] << (lk[1] % 16)) | (v[31] >>> (32 - (lk[1] % 16)));
  v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
  v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16)));
  v[32] += lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] += lk[1];
  v[36] += lk[0];
  v[39] += lk[1];
  v[38] += lk[0];
  v[41] ^= lk[1];
  v[40] += lk[0];
  v[43] ^= lk[1];
  v[42] -= lk[0];
  v[45] ^= lk[1];
  v[44] -= lk[0];
  v[47] -= lk[1];
  v[46] = (v[46] >>> (lk[0] % 16)) | (v[46] << (32 - (lk[0] % 16)));
  v[49] = (v[49] << (lk[1] % 16)) | (v[49] >>> (32 - (lk[1] % 16)));
  v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
  v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16)));
  v[50] += lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] += lk[1];
  v[54] += lk[0];
  v[57] += lk[1];
  v[56] += lk[0];
  v[59] ^= lk[1];
  v[58] += lk[0];
  v[61] ^= lk[1];
  v[60] -= lk[0];
  v[63] ^= lk[1];
  v[62] -= lk[0];
  v[65] -= lk[1];
  v[64] = (v[64] >>> (lk[0] % 16)) | (v[64] << (32 - (lk[0] % 16)));
  v[67] = (v[67] << (lk[1] % 16)) | (v[67] >>> (32 - (lk[1] % 16)));
  v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
  v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16)));
  v[68] += lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] += lk[1];
  v[72] += lk[0];
  v[75] += lk[1];
  v[74] += lk[0];
  v[77] ^= lk[1];
  v[76] += lk[0];
  v[79] ^= lk[1];
  v[78] -= lk[0];
  v[81] ^= lk[1];
  v[80] -= lk[0];
  v[83] -= lk[1];
  v[82] = (v[82] >>> (lk[0] % 16)) | (v[82] << (32 - (lk[0] % 16)));
  v[85] = (v[85] << (lk[1] % 16)) | (v[85] >>> (32 - (lk[1] % 16)));
  v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
  v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16)));
  v[86] += lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] += lk[1];
  v[90] += lk[0];
  v[93] += lk[1];
  v[92] += lk[0];
  v[95] ^= lk[1];
  v[94] += lk[0];
  v[97] ^= lk[1];
  v[96] -= lk[0];
  v[99] ^= lk[1];
  v[98] -= lk[0];
  v[101] -= lk[1];
  v[100] = (v[100] >>> (lk[0] % 16)) | (v[100] << (32 - (lk[0] % 16)));
  v[103] = (v[103] << (lk[1] % 16)) | (v[103] >>> (32 - (lk[1] % 16)));
  v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
  v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16)));
  v[104] += lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] += lk[1];
  v[108] += lk[0];
  v[111] += lk[1];
  v[110] += lk[0];
  v[113] ^= lk[1];
  v[112] += lk[0];
  v[115] ^= lk[1];
  v[114] -= lk[0];
  v[117] ^= lk[1];
  v[116] -= lk[0];
  v[119] -= lk[1];
  v[118] = (v[118] >>> (lk[0] % 16)) | (v[118] << (32 - (lk[0] % 16)));
  v[121] = (v[121] << (lk[1] % 16)) | (v[121] >>> (32 - (lk[1] % 16)));
  v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
  v[123] = (v[123] >>> (lk[1] % 16)) | (v[123] << (32 - (lk[1] % 16)));
  v[122] += lk[0];
  v[125] -= lk[1];
  v[124] -= lk[0];
  v[127] += lk[1];
  v[126] += lk[0];
  v[129] += lk[1];
  v[128] += lk[0];
  v[131] ^= lk[1];
  v[130] += lk[0];
  v[133] ^= lk[1];
  v[132] -= lk[0];
  v[135] ^= lk[1];
  v[134] -= lk[0];
  v[137] -= lk[1];
  v[136] = (v[136] >>> (lk[0] % 16)) | (v[136] << (32 - (lk[0] % 16)));
  v[139] = (v[139] << (lk[1] % 16)) | (v[139] >>> (32 - (lk[1] % 16)));
  v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)));
  v[141] = (v[141] >>> (lk[1] % 16)) | (v[141] << (32 - (lk[1] % 16)));
  v[140] += lk[0];
  v[143] -= lk[1];
  v[142] -= lk[0];
  v[145] += lk[1];
  v[144] += lk[0];
  v[147] += lk[1];
  v[146] += lk[0];
  v[149] ^= lk[1];
  v[148] += lk[0];
  v[151] ^= lk[1];
  v[150] -= lk[0];
  v[153] ^= lk[1];
  v[152] -= lk[0];
  v[155] -= lk[1];
  v[154] = (v[154] >>> (lk[0] % 16)) | (v[154] << (32 - (lk[0] % 16)));
  v[157] = (v[157] << (lk[1] % 16)) | (v[157] >>> (32 - (lk[1] % 16)));
  v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)));
  v[159] = (v[159] >>> (lk[1] % 16)) | (v[159] << (32 - (lk[1] % 16)));
  v[158] += lk[0];
  v[161] -= lk[1];
  v[160] -= lk[0];
  v[163] += lk[1];
  v[162] += lk[0];
  v[165] += lk[1];
  v[164] += lk[0];
  v[167] ^= lk[1];
  v[166] += lk[0];
  v[169] ^= lk[1];
  v[168] -= lk[0];
  v[171] ^= lk[1];
  v[170] -= lk[0];
  v[173] -= lk[1];
  v[172] = (v[172] >>> (lk[0] % 16)) | (v[172] << (32 - (lk[0] % 16)));
  v[175] = (v[175] << (lk[1] % 16)) | (v[175] >>> (32 - (lk[1] % 16)));
  v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)));
  v[177] = (v[177] >>> (lk[1] % 16)) | (v[177] << (32 - (lk[1] % 16)));
  v[176] += lk[0];
  v[179] -= lk[1];
  v[178] -= lk[0];
  v[181] += lk[1];
  v[180] += lk[0];
  v[183] += lk[1];
  v[182] += lk[0];
  v[185] ^= lk[1];
  v[184] += lk[0];
  v[187] ^= lk[1];
  v[186] -= lk[0];
  v[189] ^= lk[1];
  v[188] -= lk[0];
  v[191] -= lk[1];
  v[190] = (v[190] >>> (lk[0] % 16)) | (v[190] << (32 - (lk[0] % 16)));
  v[193] = (v[193] << (lk[1] % 16)) | (v[193] >>> (32 - (lk[1] % 16)));
  v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)));
  v[195] = (v[195] >>> (lk[1] % 16)) | (v[195] << (32 - (lk[1] % 16)));
  v[194] += lk[0];
  v[197] -= lk[1];
  v[196] -= lk[0];
  v[199] += lk[1];
  v[198] += lk[0];
  v[201] += lk[1];
  v[200] += lk[0];
  v[203] ^= lk[1];
  v[202] += lk[0];
  v[205] ^= lk[1];
  v[204] -= lk[0];
  v[207] ^= lk[1];
  v[206] -= lk[0];
  v[209] -= lk[1];
  v[208] = (v[208] >>> (lk[0] % 16)) | (v[208] << (32 - (lk[0] % 16)));
  v[211] = (v[211] << (lk[1] % 16)) | (v[211] >>> (32 - (lk[1] % 16)));
  v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)));
  v[213] = (v[213] >>> (lk[1] % 16)) | (v[213] << (32 - (lk[1] % 16)));
  v[212] += lk[0];
  v[215] -= lk[1];
  v[214] -= lk[0];
  v[217] += lk[1];
  v[216] += lk[0];
  v[219] += lk[1];
  v[218] += lk[0];
  v[221] ^= lk[1];
  v[220] += lk[0];
  v[223] ^= lk[1];
  v[222] -= lk[0];
  v[225] ^= lk[1];
  v[224] -= lk[0];
  v[227] -= lk[1];
  v[226] = (v[226] >>> (lk[0] % 16)) | (v[226] << (32 - (lk[0] % 16)));
  v[229] = (v[229] << (lk[1] % 16)) | (v[229] >>> (32 - (lk[1] % 16)));
  v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)));
  v[231] = (v[231] >>> (lk[1] % 16)) | (v[231] << (32 - (lk[1] % 16)));
  v[230] += lk[0];
  v[233] -= lk[1];
  v[232] -= lk[0];
  v[235] += lk[1];
  v[234] += lk[0];
  v[237] += lk[1];
  v[236] += lk[0];
  v[239] ^= lk[1];
  v[238] += lk[0];
  v[241] ^= lk[1];
  v[240] -= lk[0];
  v[243] ^= lk[1];
  v[242] -= lk[0];
  v[245] -= lk[1];
  v[244] = (v[244] >>> (lk[0] % 16)) | (v[244] << (32 - (lk[0] % 16)));
  v[247] = (v[247] << (lk[1] % 16)) | (v[247] >>> (32 - (lk[1] % 16)));
  v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)));
  v[249] = (v[249] >>> (lk[1] % 16)) | (v[249] << (32 - (lk[1] % 16)));
  v[248] += lk[0];
  v[251] -= lk[1];
  v[250] -= lk[0];
  v[253] += lk[1];
  v[252] += lk[0];
  v[255] += lk[1];
  v[254] += lk[0];
  v[257] ^= lk[1];
  v[256] += lk[0];
  v[259] ^= lk[1];
  v[258] -= lk[0];
  v[261] ^= lk[1];
  v[260] -= lk[0];
  v[263] -= lk[1];
  v[262] = (v[262] >>> (lk[0] % 16)) | (v[262] << (32 - (lk[0] % 16)));
  v[265] = (v[265] << (lk[1] % 16)) | (v[265] >>> (32 - (lk[1] % 16)));
  v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)));
  v[267] = (v[267] >>> (lk[1] % 16)) | (v[267] << (32 - (lk[1] % 16)));
  v[266] += lk[0];
  v[269] -= lk[1];
  v[268] -= lk[0];
  v[271] += lk[1];
  v[270] += lk[0];
  v[273] += lk[1];
  v[272] += lk[0];
  v[275] ^= lk[1];
  v[274] += lk[0];
  v[277] ^= lk[1];
  v[276] -= lk[0];
  v[279] ^= lk[1];
  v[278] -= lk[0];
  v[281] -= lk[1];
  v[280] = (v[280] >>> (lk[0] % 16)) | (v[280] << (32 - (lk[0] % 16)));
  v[283] = (v[283] << (lk[1] % 16)) | (v[283] >>> (32 - (lk[1] % 16)));
  v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)));
  v[285] = (v[285] >>> (lk[1] % 16)) | (v[285] << (32 - (lk[1] % 16)));
  v[284] += lk[0];
  v[287] -= lk[1];
  v[286] -= lk[0];
  v[289] += lk[1];
  v[288] += lk[0];
  v[291] += lk[1];
  v[290] += lk[0];
  v[293] ^= lk[1];
  v[292] += lk[0];
  v[295] ^= lk[1];
  v[294] -= lk[0];
  v[297] ^= lk[1];
  v[296] -= lk[0];
  v[299] -= lk[1];
  v[298] = (v[298] >>> (lk[0] % 16)) | (v[298] << (32 - (lk[0] % 16)));
  v[301] = (v[301] << (lk[1] % 16)) | (v[301] >>> (32 - (lk[1] % 16)));
  v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)));
  v[303] = (v[303] >>> (lk[1] % 16)) | (v[303] << (32 - (lk[1] % 16)));
  v[302] += lk[0];
  v[305] -= lk[1];
  v[304] -= lk[0];
  v[307] += lk[1];
  v[306] += lk[0];
  v[309] += lk[1];
  v[308] += lk[0];
  v[311] ^= lk[1];
  v[310] += lk[0];
  v[313] ^= lk[1];
  v[312] -= lk[0];
  v[315] ^= lk[1];
  v[314] -= lk[0];
  v[317] -= lk[1];
  v[316] = (v[316] >>> (lk[0] % 16)) | (v[316] << (32 - (lk[0] % 16)));
  v[319] = (v[319] << (lk[1] % 16)) | (v[319] >>> (32 - (lk[1] % 16)));
  v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)));
  v[321] = (v[321] >>> (lk[1] % 16)) | (v[321] << (32 - (lk[1] % 16)));
  v[320] += lk[0];
  v[323] -= lk[1];
  v[322] -= lk[0];
  v[325] += lk[1];
  v[324] += lk[0];
  v[327] += lk[1];
  v[326] += lk[0];
  v[329] ^= lk[1];
  v[328] += lk[0];
  v[331] ^= lk[1];
  v[330] -= lk[0];
  v[333] ^= lk[1];
  v[332] -= lk[0];
  v[335] -= lk[1];
  v[334] = (v[334] >>> (lk[0] % 16)) | (v[334] << (32 - (lk[0] % 16)));
  v[337] = (v[337] << (lk[1] % 16)) | (v[337] >>> (32 - (lk[1] % 16)));
  v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)));
  v[339] = (v[339] >>> (lk[1] % 16)) | (v[339] << (32 - (lk[1] % 16)));
  v[338] += lk[0];
  v[341] -= lk[1];
  v[340] -= lk[0];
  v[343] += lk[1];
  v[342] += lk[0];
  v[345] += lk[1];
  v[344] += lk[0];
  v[347] ^= lk[1];
  v[346] += lk[0];
  v[349] ^= lk[1];
  v[348] -= lk[0];
  v[351] ^= lk[1];
  v[350] -= lk[0];
  v[353] -= lk[1];
  v[352] = (v[352] >>> (lk[0] % 16)) | (v[352] << (32 - (lk[0] % 16)));
  v[355] = (v[355] << (lk[1] % 16)) | (v[355] >>> (32 - (lk[1] % 16)));
  v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)));
  v[357] = (v[357] >>> (lk[1] % 16)) | (v[357] << (32 - (lk[1] % 16)));
  v[356] += lk[0];
  for (var I = 0; I < 358; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 357; O > 0; O--) {
    v[O] ^= v[O - 1];
  }
  v[0] ^= 0x3b545075;
  var strc = "";
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(xef8ba3b263b00e0d85eb0, xef8ba3b263b00e0d85eb1, xef8ba3b263b00e0d85eb2);
}

ub98484234(1,2,3)

(function (xx0, xx1, xx2) {
  var cb = xx0 + xx1 + xx2 + '220120190604'
  var rb = CryptoJS.MD5(cb).toString()
  var re = []
  for (var i = 0; i < rb.length / 8; i++) re[i] = (parseInt(rb.substr(i * 8, 2), 16) & 0xff) |
    ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) | ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) |
    (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24)
  var k2 = [0xf7cd24f, 0xa4e5bc8, 0x291940, 0x33afa8d0]
  for (var I = 0; I < 2; I++) {
    var v0 = re[I * 2], v1 = re[I * 2 + 1], sum = 0, i = 0
    var delta = 0x9e3779b9
    for (i = 0; i < 32; i++) {
      sum += delta
      v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1])
      v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3])
    }
    re[I * 2] = v0
    re[I * 2 + 1] = v1
  }
  re[0] -= k2[0]
  re[0] -= k2[2]
  re[0] -= k2[0]
  re[0] -= k2[2]
  re[1] -= k2[1]
  re[1] -= k2[3]
  re[1] -= k2[3]
  re[1] += k2[3]
  re[2] -= k2[0]
  re[2] ^= k2[2]
  re[2] ^= k2[2]
  re[3] += k2[1]
  re[3] ^= k2[3]
  re[3] ^= k2[3]
  re[0] += k2[0]
  re[0] ^= k2[2]
  re[0] ^= k2[0]
  re[0] -= k2[2]
  re[1] = (re[1] << (k2[1] % 16)) | (re[1] >>> (32 - (k2[1] % 16)))
  re[1] += k2[3]
  re[1] += k2[1]
  re[1] = (re[1] << (k2[3] % 16)) | (re[1] >>> (32 - (k2[3] % 16)))
  re[2] = (re[2] << (k2[0] % 16)) | (re[2] >>> (32 - (k2[0] % 16)))
  re[2] = (re[2] >>> (k2[2] % 16)) | (re[2] << (32 - (k2[2] % 16)))
  re[2] += k2[2]
  re[3] -= k2[1]
  re[3] = (re[3] << (k2[3] % 16)) | (re[3] >>> (32 - (k2[3] % 16)))
  re[3] = (re[3] << (k2[1] % 16)) | (re[3] >>> (32 - (k2[1] % 16)))
  re[3] ^= k2[3]
  {
    var hc = '0123456789abcdef'.split('')
    for (var i = 0; i < re.length; i++) {
      var j = 0, s = ''
      for (; j < 4; j++) s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15]
      re[i] = s
    }
    re = re.join('')
  }
  var rt = 'v=220120190604' + '&did=' + xx1 + '&tt=' + xx2 + '&sign=' + re
  return rt
});

