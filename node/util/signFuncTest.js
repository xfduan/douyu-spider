const CryptoJS = require('crypto-js')

var fc50bb4c3337579102e = [
  0xe6dce875,
  0x91963881,
  0x4a123680,
  0x3484208f,
  0x188c09ec,
  0x866a6eb,
  0x8b8aa26f,
  0x6bf15c02,
  0xe188157,
  0xbb98174f,
  0x16b54f60,
  0xfafb69fc,
  0x7e1e8429,
  0x111d95b8,
  0x83c4fe13,
  0x284f2c87,
  0x69c3e0c0,
  0xac3fbbc3,
  0xa2d590c,
  0x4e64476d,
  0x7315d76a,
  0x6a548134,
  0xc7720405,
  0xca788717,
  0x531706b9,
  0x3aaf760f,
  0x12c58eaf,
  0x7321d49e,
  0x6519a274,
  0x1ad3221c,
  0x4691fecb,
  0x6e005a8b,
  0xd5742732,
  0xc41105be,
  0xe29d4b23,
  0x5bfc359a,
  0xd3b177f3,
  0x90851ca1,
  0x64e4ba88,
  0xafb98437,
  0x9f203fed,
  0xbbba4bcb,
  0xa3f49e16,
  0xba36a086,
  0x2691f7a3,
  0xb6855fa1,
  0x8e60bbcc,
  0x848d87b,
  0xc0cf524,
  0xb61de02a,
  0x141971da,
  0x7cbd9212,
  0xe1bbc270,
  0xa3aee78d,
  0x32323e17,
  0xc5592ce6,
  0xdf7bcc8e,
  0x18472a7,
  0x6cc2c697,
  0x4581e255,
  0xe6bf9b59,
  0xe0856c8e,
  0x837e0a5f,
  0x77337e66,
  0x2d3b6ae0,
  0x67ae9b8a,
  0x9d7b1275,
  0x7594a0,
  0xbc7d061c,
  0x339a105,
  0x24004c0e,
  0xbd9ec4a8,
  0xef0762ad,
  0x5354ae22,
  0x709245a6,
  0x5febbc28,
  0x64999735,
  0x2a732d94,
  0xc744812d,
  0xa1e30a54,
  0x989114bd,
  0x1ac1ae4d,
  0xe896e439,
  0x3e0bb8ed,
  0x6672c967,
  0xf82fc4d4,
  0xd81faf1c,
  0xcdea278e,
  0xf1df0310,
  0x166d065f,
  0xe74c58c7,
  0x760e14e1,
  0x4ad152c0,
  0x52c5538,
  0x48eb3ffa,
  0xa3a62a29,
  0x5a2a7d7a,
  0x7fe681d,
  0xd0d9119f,
  0xdecad966,
  0xf44fab0b,
  0xf90f5b57,
  0xc21442ac,
  0x26fb640a,
  0xe4ba3271,
  0xc4372968,
  0xc5af5294,
  0x9b97ce48,
  0x265f24c2,
  0xfad655cc,
  0x7b22dd8d,
  0xfc16ad23,
  0x411a2c1e,
  0x3f8a2999,
  0x6d19bb45,
  0xa38a3937,
  0x1de7e7a0,
  0xc160133f,
  0xc18ce9b6,
  0x3d6c391a,
  0xa137fbe5,
  0xda2b04c9,
  0xaf9b3241,
  0x42994a47,
  0xf7c720ae,
  0x3a579e49,
  0x57f0e753,
  0x793eddf9,
  0x1965ab37,
  0xb3b84e52,
  0x3952bc23,
  0x6759f4f4,
  0x5e23fe83,
  0xd7738b6a,
  0xf95896d0,
  0x75032085,
  0x7c47d666,
  0xe7499962,
  0x4d3488e1,
  0x48c6ad3,
  0x4d7990c,
  0x34924dd4,
  0x7f1843fa,
  0xf383e66a,
  0x5b618dc1,
  0xe9463596,
  0x7295d02c,
  0x2a11213e,
  0xf5b17a9,
  0xb3a62648,
  0x7bb5c18,
  0x427b7c1e,
  0xb640987e,
  0xda2ed292,
  0x9c1331a8,
  0x7f5f6603,
  0xb90e71b0,
  0x69947b5b,
  0xc723860e,
  0x2b7d7c44,
  0x3cca9c94,
  0xe3523699,
  0xf3a02526,
  0x137ffdcb,
  0x7a48c313,
  0x4dc53d12,
  0xcf07da59,
  0x3106b577,
  0xa52775cf,
  0x84bf5015,
  0xf562d7bc,
  0x7a48b689,
  0xe89b56aa,
  0xf46945de,
  0xe6bf800,
  0xb5e8aa09,
  0x44cc14fd,
  0x43361f2d,
  0x257b4f7e,
  0xe73684d7,
  0xa185ca85,
  0xb6eb622,
  0xb442b8d,
  0x36869060,
  0x84326c14,
  0xbd32d294,
  0xf6938134,
  0xd350e7dc,
  0xe9c9c047,
  0xf650ce83,
  0x6f95351a,
  0x44fa5dc3,
  0xd87d39c6,
  0xe6b7ce56,
  0x503b1f1,
  0xe0f3fd89,
  0x490e9ed,
  0xdbea6ea8,
  0x4e47a47d,
  0x721a1c10,
  0xdbdd59ff,
  0x128483d2,
  0x38daadf,
  0x6858703e,
  0x9f279e31,
  0x1fc1c258,
  0x4b0c7db4,
  0x237ef203,
  0xa95ee0e7,
  0x828623ed,
  0x880d2bb9,
  0x9411473b,
  0xf88f7fb6,
  0x929d10ef,
  0xe8ea8251,
  0x31582c30,
  0x83eedf69,
  0x30fdb9d3,
  0x31bdb764,
  0x8a81a517,
  0x426898d4,
  0x68ceb64b,
  0x6c97822a,
  0x70d6ed47,
  0xffb81252,
  0xae461ab3,
  0x4fa10cc5,
  0xd2c00642,
  0x6d5aaf91,
  0xb80c3f1e,
  0xeee16fd3,
  0xaca024d7,
  0xbc673dff,
  0x94773130,
  0x5592d288,
  0x256a8b6d,
  0xc685f4b4,
  0x7ec03425,
  0xdaf12cf4,
  0x44c58971,
  0xe48f04c0,
  0xb5cfeed6,
  0x952c2881,
  0x256096e4,
  0x4b873c99,
  0x42e6dfc1,
  0x925ee7a0,
  0x7dd35a62,
  0xe855daaa,
  0xe4b8a93d,
  0x7a3590a0,
  0xd06efadc,
  0x8ff054c3,
  0x9973009f,
  0xaddf1d6,
  0x3a2cd6e9,
  0x2fddad02,
  0x9efa4cc3,
  0xe4098a96,
  0xd6ce3b51,
  0x9459de25,
  0x8123ef92,
  0x3f76ad01,
  0x8d032862,
  0x6fb0fea7,
  0x3047b32d,
  0x66bf2be0,
  0x7498b8b8,
  0x393808a6,
  0x2e097e1b,
  0x4ac1da0b,
  0xfca6d372,
  0x9471e48c,
  0x7e9ec231,
  0xdff655c9,
  0x31087b71,
  0x42460d29,
  0x9fa0813a,
  0x61470f7d,
  0x40b84785,
  0x8bd312e,
  0x3f43bda,
  0xaf132487,
  0x1b7b5bac,
  0xda06e03a,
  0x1dbae45c,
  0xdddc75a,
  0x96d6261f,
  0x73b2c708,
  0x337fe2d0,
  0x941cefbb,
  0x1059d138,
  0x37fba814,
  0xb82f33af,
  0x8966c29b,
  0xe3452576,
  0x356cfb38,
  0x75294786,
  0xc1412ce5,
  0xc2125efa,
  0x8463e587,
  0xfabaa190,
  0x424214d3,
  0xeea120ae,
  0x4e608be0,
  0x45d366a,
  0xc68e682c,
  0x92bd3480,
  0x63015ba1,
  0x5697f1dc,
  0x379b23e5,
  0xeb0441a1,
  0x62959165,
  0xf484455c,
  0xac11e3f7,
  0x3f37bb0,
  0x7921df5b,
  0x4d82f79e,
  0x4ea6aa89,
  0x95740a62,
  0x3119a5bc,
  0x8ad4cf52,
  0x14d9b881,
  0x70ce25c7,
  0xb2b32b16,
  0xe2ef2f45,
  0x5d2aa395,
  0xa632f90f,
  0xe16189b4,
  0x275b827e,
  0x8b4a9da6,
  0x1492a710,
  0xfa32c65f,
  0x9209a47d,
  0x5df38432,
  0xdfd9893f,
  0xa10dfd3d,
  0x7fc6eb26,
  0x512e5cff,
  0xcd00fde3,
  0x1225fb45,
  0x2117d2de,
  0xa62cdf66,
  0xff1a596e,
  0x2665f736,
  0x6d5d29c9,
  0xecd481bd,
  0xe220f045,
  0xc26d9b82,
  0x88a6c1ab,
  0x4234bd1b,
  0x635420e5,
  0xf83cf5a7,
  0x48de3182,
  0x29f3af88,
  0xa6a74cdf,
  0x87dacc25,
  0x1a698bd7,
  0x2cc96aac,
  0xdff9ca7,
  0x47f2beaa,
  0xe21dae1f,
  0xddcf5705,
  0xaf01e03b,
  0x6d1e8ffe,
  0xff02d371,
  0x125ea8db,
  0x30cd641f,
  0x90dfc01d,
  0x49e2f60a,
  0xe98a729,
  0xcd5706e0,
  0xd0b04755,
  0x3a5eff15,
  0x1899846f,
  0x5099b05a,
  0x5d262bac,
  0xf4c556a2,
  0x20dcdcd0,
  0xfb109318,
  0x7d5b1518,
  0xa1c2c8cb,
  0x2fbba54,
  0x8d648d71,
  0x2815dab,
  0x347ffdf9,
  0x49375427,
  0xae4ea9ff,
  0x694b050c,
  0x4f396706,
  0x6585aef2,
  0xeeaa3afe,
  0x75f52b4f,
  0x816e4832,
  0xa8500897,
  0x88cfded2,
  0xa08e2aa6,
  0xbf5c0c4b,
  0xfa313264,
  0xff9faa25,
  0x625f4f4b,
  0xbb069ee7,
  0xada6746e,
  0x5426a0f2,
  0x219d8f11,
  0xde4f3605,
  0x39c276ad,
  0x4e0d66b9,
  0x82711a5f,
  0x33494830,
  0x57b26c88,
  0xd276fae6,
  0x4263e124,
  0xdc9a4998,
  0x56312cdd,
  0xa4ed4041,
  0x36df2376,
  0x8a1fc112,
  0x10c71c55,
  0xa576df67,
  0x7364467f,
  0xec2b41b8,
  0x232cd944,
  0xd3bbea9e,
  0x204dc52c,
  0xf8de8457,
  0xa3c59dfe,
  0xe6321aa4,
  0xdd51f41b,
  0xf855f7e9]

function ub98484234(fc50bb4c3337579102e0, fc50bb4c3337579102e1, fc50bb4c3337579102e2) {
  var rk = [
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32,
    10,
    31,
    28,
    29,
    35,
    14,
    25,
    10,
    32]
  var k2 = [0x1dd66dad, 0x7f7af3cd]
  var lk = [0x1dd66dad, 0x7f7af3cd]
  var v = fc50bb4c3337579102e.slice(0)
  var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb]
  for (var O = 0; O < 430; O++) {
    v[O] ^= 0x5834b7b2
  }
  v[1] -= lk[1]
  v[0] += lk[0]
  v[3] = (v[3] << (lk[1] % 16)) | (v[3] >>> (32 - (lk[1] % 16)))
  v[2] += lk[0]
  v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16)))
  v[4] += lk[0]
  v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16)))
  v[6] -= lk[0]
  v[9] ^= lk[1]
  v[8] -= lk[0]
  v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)))
  v[10] = (v[10] >>> (lk[0] % 16)) | (v[10] << (32 - (lk[0] % 16)))
  v[13] ^= lk[1]
  v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)))
  v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)))
  v[14] += lk[0]
  v[17] -= lk[1]
  v[16] -= lk[0]
  v[19] -= lk[1]
  v[18] += lk[0]
  v[21] = (v[21] << (lk[1] % 16)) | (v[21] >>> (32 - (lk[1] % 16)))
  v[20] += lk[0]
  v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16)))
  v[22] += lk[0]
  v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16)))
  v[24] -= lk[0]
  v[27] ^= lk[1]
  v[26] -= lk[0]
  v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)))
  v[28] = (v[28] >>> (lk[0] % 16)) | (v[28] << (32 - (lk[0] % 16)))
  v[31] ^= lk[1]
  v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)))
  v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)))
  v[32] += lk[0]
  v[35] -= lk[1]
  v[34] -= lk[0]
  v[37] -= lk[1]
  v[36] += lk[0]
  v[39] = (v[39] << (lk[1] % 16)) | (v[39] >>> (32 - (lk[1] % 16)))
  v[38] += lk[0]
  v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16)))
  v[40] += lk[0]
  v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16)))
  v[42] -= lk[0]
  v[45] ^= lk[1]
  v[44] -= lk[0]
  v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)))
  v[46] = (v[46] >>> (lk[0] % 16)) | (v[46] << (32 - (lk[0] % 16)))
  v[49] ^= lk[1]
  v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)))
  v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)))
  v[50] += lk[0]
  v[53] -= lk[1]
  v[52] -= lk[0]
  v[55] -= lk[1]
  v[54] += lk[0]
  v[57] = (v[57] << (lk[1] % 16)) | (v[57] >>> (32 - (lk[1] % 16)))
  v[56] += lk[0]
  v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16)))
  v[58] += lk[0]
  v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16)))
  v[60] -= lk[0]
  v[63] ^= lk[1]
  v[62] -= lk[0]
  v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)))
  v[64] = (v[64] >>> (lk[0] % 16)) | (v[64] << (32 - (lk[0] % 16)))
  v[67] ^= lk[1]
  v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)))
  v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)))
  v[68] += lk[0]
  v[71] -= lk[1]
  v[70] -= lk[0]
  v[73] -= lk[1]
  v[72] += lk[0]
  v[75] = (v[75] << (lk[1] % 16)) | (v[75] >>> (32 - (lk[1] % 16)))
  v[74] += lk[0]
  v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16)))
  v[76] += lk[0]
  v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16)))
  v[78] -= lk[0]
  v[81] ^= lk[1]
  v[80] -= lk[0]
  v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)))
  v[82] = (v[82] >>> (lk[0] % 16)) | (v[82] << (32 - (lk[0] % 16)))
  v[85] ^= lk[1]
  v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)))
  v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)))
  v[86] += lk[0]
  v[89] -= lk[1]
  v[88] -= lk[0]
  v[91] -= lk[1]
  v[90] += lk[0]
  v[93] = (v[93] << (lk[1] % 16)) | (v[93] >>> (32 - (lk[1] % 16)))
  v[92] += lk[0]
  v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16)))
  v[94] += lk[0]
  v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16)))
  v[96] -= lk[0]
  v[99] ^= lk[1]
  v[98] -= lk[0]
  v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)))
  v[100] = (v[100] >>> (lk[0] % 16)) | (v[100] << (32 - (lk[0] % 16)))
  v[103] ^= lk[1]
  v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)))
  v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16)))
  v[104] += lk[0]
  v[107] -= lk[1]
  v[106] -= lk[0]
  v[109] -= lk[1]
  v[108] += lk[0]
  v[111] = (v[111] << (lk[1] % 16)) | (v[111] >>> (32 - (lk[1] % 16)))
  v[110] += lk[0]
  v[113] = (v[113] >>> (lk[1] % 16)) | (v[113] << (32 - (lk[1] % 16)))
  v[112] += lk[0]
  v[115] = (v[115] << (lk[1] % 16)) | (v[115] >>> (32 - (lk[1] % 16)))
  v[114] -= lk[0]
  v[117] ^= lk[1]
  v[116] -= lk[0]
  v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)))
  v[118] = (v[118] >>> (lk[0] % 16)) | (v[118] << (32 - (lk[0] % 16)))
  v[121] ^= lk[1]
  v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)))
  v[123] = (v[123] << (lk[1] % 16)) | (v[123] >>> (32 - (lk[1] % 16)))
  v[122] += lk[0]
  v[125] -= lk[1]
  v[124] -= lk[0]
  v[127] -= lk[1]
  v[126] += lk[0]
  v[129] = (v[129] << (lk[1] % 16)) | (v[129] >>> (32 - (lk[1] % 16)))
  v[128] += lk[0]
  v[131] = (v[131] >>> (lk[1] % 16)) | (v[131] << (32 - (lk[1] % 16)))
  v[130] += lk[0]
  v[133] = (v[133] << (lk[1] % 16)) | (v[133] >>> (32 - (lk[1] % 16)))
  v[132] -= lk[0]
  v[135] ^= lk[1]
  v[134] -= lk[0]
  v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)))
  v[136] = (v[136] >>> (lk[0] % 16)) | (v[136] << (32 - (lk[0] % 16)))
  v[139] ^= lk[1]
  v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)))
  v[141] = (v[141] << (lk[1] % 16)) | (v[141] >>> (32 - (lk[1] % 16)))
  v[140] += lk[0]
  v[143] -= lk[1]
  v[142] -= lk[0]
  v[145] -= lk[1]
  v[144] += lk[0]
  v[147] = (v[147] << (lk[1] % 16)) | (v[147] >>> (32 - (lk[1] % 16)))
  v[146] += lk[0]
  v[149] = (v[149] >>> (lk[1] % 16)) | (v[149] << (32 - (lk[1] % 16)))
  v[148] += lk[0]
  v[151] = (v[151] << (lk[1] % 16)) | (v[151] >>> (32 - (lk[1] % 16)))
  v[150] -= lk[0]
  v[153] ^= lk[1]
  v[152] -= lk[0]
  v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)))
  v[154] = (v[154] >>> (lk[0] % 16)) | (v[154] << (32 - (lk[0] % 16)))
  v[157] ^= lk[1]
  v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)))
  v[159] = (v[159] << (lk[1] % 16)) | (v[159] >>> (32 - (lk[1] % 16)))
  v[158] += lk[0]
  v[161] -= lk[1]
  v[160] -= lk[0]
  v[163] -= lk[1]
  v[162] += lk[0]
  v[165] = (v[165] << (lk[1] % 16)) | (v[165] >>> (32 - (lk[1] % 16)))
  v[164] += lk[0]
  v[167] = (v[167] >>> (lk[1] % 16)) | (v[167] << (32 - (lk[1] % 16)))
  v[166] += lk[0]
  v[169] = (v[169] << (lk[1] % 16)) | (v[169] >>> (32 - (lk[1] % 16)))
  v[168] -= lk[0]
  v[171] ^= lk[1]
  v[170] -= lk[0]
  v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)))
  v[172] = (v[172] >>> (lk[0] % 16)) | (v[172] << (32 - (lk[0] % 16)))
  v[175] ^= lk[1]
  v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)))
  v[177] = (v[177] << (lk[1] % 16)) | (v[177] >>> (32 - (lk[1] % 16)))
  v[176] += lk[0]
  v[179] -= lk[1]
  v[178] -= lk[0]
  v[181] -= lk[1]
  v[180] += lk[0]
  v[183] = (v[183] << (lk[1] % 16)) | (v[183] >>> (32 - (lk[1] % 16)))
  v[182] += lk[0]
  v[185] = (v[185] >>> (lk[1] % 16)) | (v[185] << (32 - (lk[1] % 16)))
  v[184] += lk[0]
  v[187] = (v[187] << (lk[1] % 16)) | (v[187] >>> (32 - (lk[1] % 16)))
  v[186] -= lk[0]
  v[189] ^= lk[1]
  v[188] -= lk[0]
  v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)))
  v[190] = (v[190] >>> (lk[0] % 16)) | (v[190] << (32 - (lk[0] % 16)))
  v[193] ^= lk[1]
  v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)))
  v[195] = (v[195] << (lk[1] % 16)) | (v[195] >>> (32 - (lk[1] % 16)))
  v[194] += lk[0]
  v[197] -= lk[1]
  v[196] -= lk[0]
  v[199] -= lk[1]
  v[198] += lk[0]
  v[201] = (v[201] << (lk[1] % 16)) | (v[201] >>> (32 - (lk[1] % 16)))
  v[200] += lk[0]
  v[203] = (v[203] >>> (lk[1] % 16)) | (v[203] << (32 - (lk[1] % 16)))
  v[202] += lk[0]
  v[205] = (v[205] << (lk[1] % 16)) | (v[205] >>> (32 - (lk[1] % 16)))
  v[204] -= lk[0]
  v[207] ^= lk[1]
  v[206] -= lk[0]
  v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)))
  v[208] = (v[208] >>> (lk[0] % 16)) | (v[208] << (32 - (lk[0] % 16)))
  v[211] ^= lk[1]
  v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)))
  v[213] = (v[213] << (lk[1] % 16)) | (v[213] >>> (32 - (lk[1] % 16)))
  v[212] += lk[0]
  v[215] -= lk[1]
  v[214] -= lk[0]
  v[217] -= lk[1]
  v[216] += lk[0]
  v[219] = (v[219] << (lk[1] % 16)) | (v[219] >>> (32 - (lk[1] % 16)))
  v[218] += lk[0]
  v[221] = (v[221] >>> (lk[1] % 16)) | (v[221] << (32 - (lk[1] % 16)))
  v[220] += lk[0]
  v[223] = (v[223] << (lk[1] % 16)) | (v[223] >>> (32 - (lk[1] % 16)))
  v[222] -= lk[0]
  v[225] ^= lk[1]
  v[224] -= lk[0]
  v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)))
  v[226] = (v[226] >>> (lk[0] % 16)) | (v[226] << (32 - (lk[0] % 16)))
  v[229] ^= lk[1]
  v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)))
  v[231] = (v[231] << (lk[1] % 16)) | (v[231] >>> (32 - (lk[1] % 16)))
  v[230] += lk[0]
  v[233] -= lk[1]
  v[232] -= lk[0]
  v[235] -= lk[1]
  v[234] += lk[0]
  v[237] = (v[237] << (lk[1] % 16)) | (v[237] >>> (32 - (lk[1] % 16)))
  v[236] += lk[0]
  v[239] = (v[239] >>> (lk[1] % 16)) | (v[239] << (32 - (lk[1] % 16)))
  v[238] += lk[0]
  v[241] = (v[241] << (lk[1] % 16)) | (v[241] >>> (32 - (lk[1] % 16)))
  v[240] -= lk[0]
  v[243] ^= lk[1]
  v[242] -= lk[0]
  v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)))
  v[244] = (v[244] >>> (lk[0] % 16)) | (v[244] << (32 - (lk[0] % 16)))
  v[247] ^= lk[1]
  v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)))
  v[249] = (v[249] << (lk[1] % 16)) | (v[249] >>> (32 - (lk[1] % 16)))
  v[248] += lk[0]
  v[251] -= lk[1]
  v[250] -= lk[0]
  v[253] -= lk[1]
  v[252] += lk[0]
  v[255] = (v[255] << (lk[1] % 16)) | (v[255] >>> (32 - (lk[1] % 16)))
  v[254] += lk[0]
  v[257] = (v[257] >>> (lk[1] % 16)) | (v[257] << (32 - (lk[1] % 16)))
  v[256] += lk[0]
  v[259] = (v[259] << (lk[1] % 16)) | (v[259] >>> (32 - (lk[1] % 16)))
  v[258] -= lk[0]
  v[261] ^= lk[1]
  v[260] -= lk[0]
  v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)))
  v[262] = (v[262] >>> (lk[0] % 16)) | (v[262] << (32 - (lk[0] % 16)))
  v[265] ^= lk[1]
  v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)))
  v[267] = (v[267] << (lk[1] % 16)) | (v[267] >>> (32 - (lk[1] % 16)))
  v[266] += lk[0]
  v[269] -= lk[1]
  v[268] -= lk[0]
  v[271] -= lk[1]
  v[270] += lk[0]
  v[273] = (v[273] << (lk[1] % 16)) | (v[273] >>> (32 - (lk[1] % 16)))
  v[272] += lk[0]
  v[275] = (v[275] >>> (lk[1] % 16)) | (v[275] << (32 - (lk[1] % 16)))
  v[274] += lk[0]
  v[277] = (v[277] << (lk[1] % 16)) | (v[277] >>> (32 - (lk[1] % 16)))
  v[276] -= lk[0]
  v[279] ^= lk[1]
  v[278] -= lk[0]
  v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)))
  v[280] = (v[280] >>> (lk[0] % 16)) | (v[280] << (32 - (lk[0] % 16)))
  v[283] ^= lk[1]
  v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)))
  v[285] = (v[285] << (lk[1] % 16)) | (v[285] >>> (32 - (lk[1] % 16)))
  v[284] += lk[0]
  v[287] -= lk[1]
  v[286] -= lk[0]
  v[289] -= lk[1]
  v[288] += lk[0]
  v[291] = (v[291] << (lk[1] % 16)) | (v[291] >>> (32 - (lk[1] % 16)))
  v[290] += lk[0]
  v[293] = (v[293] >>> (lk[1] % 16)) | (v[293] << (32 - (lk[1] % 16)))
  v[292] += lk[0]
  v[295] = (v[295] << (lk[1] % 16)) | (v[295] >>> (32 - (lk[1] % 16)))
  v[294] -= lk[0]
  v[297] ^= lk[1]
  v[296] -= lk[0]
  v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)))
  v[298] = (v[298] >>> (lk[0] % 16)) | (v[298] << (32 - (lk[0] % 16)))
  v[301] ^= lk[1]
  v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)))
  v[303] = (v[303] << (lk[1] % 16)) | (v[303] >>> (32 - (lk[1] % 16)))
  v[302] += lk[0]
  v[305] -= lk[1]
  v[304] -= lk[0]
  v[307] -= lk[1]
  v[306] += lk[0]
  v[309] = (v[309] << (lk[1] % 16)) | (v[309] >>> (32 - (lk[1] % 16)))
  v[308] += lk[0]
  v[311] = (v[311] >>> (lk[1] % 16)) | (v[311] << (32 - (lk[1] % 16)))
  v[310] += lk[0]
  v[313] = (v[313] << (lk[1] % 16)) | (v[313] >>> (32 - (lk[1] % 16)))
  v[312] -= lk[0]
  v[315] ^= lk[1]
  v[314] -= lk[0]
  v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)))
  v[316] = (v[316] >>> (lk[0] % 16)) | (v[316] << (32 - (lk[0] % 16)))
  v[319] ^= lk[1]
  v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)))
  v[321] = (v[321] << (lk[1] % 16)) | (v[321] >>> (32 - (lk[1] % 16)))
  v[320] += lk[0]
  v[323] -= lk[1]
  v[322] -= lk[0]
  v[325] -= lk[1]
  v[324] += lk[0]
  v[327] = (v[327] << (lk[1] % 16)) | (v[327] >>> (32 - (lk[1] % 16)))
  v[326] += lk[0]
  v[329] = (v[329] >>> (lk[1] % 16)) | (v[329] << (32 - (lk[1] % 16)))
  v[328] += lk[0]
  v[331] = (v[331] << (lk[1] % 16)) | (v[331] >>> (32 - (lk[1] % 16)))
  v[330] -= lk[0]
  v[333] ^= lk[1]
  v[332] -= lk[0]
  v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)))
  v[334] = (v[334] >>> (lk[0] % 16)) | (v[334] << (32 - (lk[0] % 16)))
  v[337] ^= lk[1]
  v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)))
  v[339] = (v[339] << (lk[1] % 16)) | (v[339] >>> (32 - (lk[1] % 16)))
  v[338] += lk[0]
  v[341] -= lk[1]
  v[340] -= lk[0]
  v[343] -= lk[1]
  v[342] += lk[0]
  v[345] = (v[345] << (lk[1] % 16)) | (v[345] >>> (32 - (lk[1] % 16)))
  v[344] += lk[0]
  v[347] = (v[347] >>> (lk[1] % 16)) | (v[347] << (32 - (lk[1] % 16)))
  v[346] += lk[0]
  v[349] = (v[349] << (lk[1] % 16)) | (v[349] >>> (32 - (lk[1] % 16)))
  v[348] -= lk[0]
  v[351] ^= lk[1]
  v[350] -= lk[0]
  v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)))
  v[352] = (v[352] >>> (lk[0] % 16)) | (v[352] << (32 - (lk[0] % 16)))
  v[355] ^= lk[1]
  v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)))
  v[357] = (v[357] << (lk[1] % 16)) | (v[357] >>> (32 - (lk[1] % 16)))
  v[356] += lk[0]
  v[359] -= lk[1]
  v[358] -= lk[0]
  v[361] -= lk[1]
  v[360] += lk[0]
  v[363] = (v[363] << (lk[1] % 16)) | (v[363] >>> (32 - (lk[1] % 16)))
  v[362] += lk[0]
  v[365] = (v[365] >>> (lk[1] % 16)) | (v[365] << (32 - (lk[1] % 16)))
  v[364] += lk[0]
  v[367] = (v[367] << (lk[1] % 16)) | (v[367] >>> (32 - (lk[1] % 16)))
  v[366] -= lk[0]
  v[369] ^= lk[1]
  v[368] -= lk[0]
  v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)))
  v[370] = (v[370] >>> (lk[0] % 16)) | (v[370] << (32 - (lk[0] % 16)))
  v[373] ^= lk[1]
  v[372] = (v[372] >>> (lk[0] % 16)) | (v[372] << (32 - (lk[0] % 16)))
  v[375] = (v[375] << (lk[1] % 16)) | (v[375] >>> (32 - (lk[1] % 16)))
  v[374] += lk[0]
  v[377] -= lk[1]
  v[376] -= lk[0]
  v[379] -= lk[1]
  v[378] += lk[0]
  v[381] = (v[381] << (lk[1] % 16)) | (v[381] >>> (32 - (lk[1] % 16)))
  v[380] += lk[0]
  v[383] = (v[383] >>> (lk[1] % 16)) | (v[383] << (32 - (lk[1] % 16)))
  v[382] += lk[0]
  v[385] = (v[385] << (lk[1] % 16)) | (v[385] >>> (32 - (lk[1] % 16)))
  v[384] -= lk[0]
  v[387] ^= lk[1]
  v[386] -= lk[0]
  v[389] = (v[389] << (lk[1] % 16)) | (v[389] >>> (32 - (lk[1] % 16)))
  v[388] = (v[388] >>> (lk[0] % 16)) | (v[388] << (32 - (lk[0] % 16)))
  v[391] ^= lk[1]
  v[390] = (v[390] >>> (lk[0] % 16)) | (v[390] << (32 - (lk[0] % 16)))
  v[393] = (v[393] << (lk[1] % 16)) | (v[393] >>> (32 - (lk[1] % 16)))
  v[392] += lk[0]
  v[395] -= lk[1]
  v[394] -= lk[0]
  v[397] -= lk[1]
  v[396] += lk[0]
  v[399] = (v[399] << (lk[1] % 16)) | (v[399] >>> (32 - (lk[1] % 16)))
  v[398] += lk[0]
  v[401] = (v[401] >>> (lk[1] % 16)) | (v[401] << (32 - (lk[1] % 16)))
  v[400] += lk[0]
  v[403] = (v[403] << (lk[1] % 16)) | (v[403] >>> (32 - (lk[1] % 16)))
  v[402] -= lk[0]
  v[405] ^= lk[1]
  v[404] -= lk[0]
  v[407] = (v[407] << (lk[1] % 16)) | (v[407] >>> (32 - (lk[1] % 16)))
  v[406] = (v[406] >>> (lk[0] % 16)) | (v[406] << (32 - (lk[0] % 16)))
  v[409] ^= lk[1]
  v[408] = (v[408] >>> (lk[0] % 16)) | (v[408] << (32 - (lk[0] % 16)))
  v[411] = (v[411] << (lk[1] % 16)) | (v[411] >>> (32 - (lk[1] % 16)))
  v[410] += lk[0]
  v[413] -= lk[1]
  v[412] -= lk[0]
  v[415] -= lk[1]
  v[414] += lk[0]
  v[417] = (v[417] << (lk[1] % 16)) | (v[417] >>> (32 - (lk[1] % 16)))
  v[416] += lk[0]
  v[419] = (v[419] >>> (lk[1] % 16)) | (v[419] << (32 - (lk[1] % 16)))
  v[418] += lk[0]
  v[421] = (v[421] << (lk[1] % 16)) | (v[421] >>> (32 - (lk[1] % 16)))
  v[420] -= lk[0]
  v[423] ^= lk[1]
  v[422] -= lk[0]
  v[425] = (v[425] << (lk[1] % 16)) | (v[425] >>> (32 - (lk[1] % 16)))
  v[424] = (v[424] >>> (lk[0] % 16)) | (v[424] << (32 - (lk[0] % 16)))
  v[427] ^= lk[1]
  v[426] = (v[426] >>> (lk[0] % 16)) | (v[426] << (32 - (lk[0] % 16)))
  v[429] = (v[429] << (lk[1] % 16)) | (v[429] >>> (32 - (lk[1] % 16)))
  v[428] += lk[0]
  for (var I = 0; I < 430; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3])
      sum -= d
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3])
    }
    v[I] = v0 ^ k2[1]
    v[I + 1] = v1 ^ k2[0]
  }
  for (var O = 429; O > 0; O--) {
    v[O] ^= v[O - 1]
  }
  v[0] ^= 0x5834b7b2
  var strc = ''
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff)
  }
  // return eval(strc)(fc50bb4c3337579102e0, fc50bb4c3337579102e1, fc50bb4c3337579102e2);
  console.log(strc)
}

ub98484234(1, 2, 3)

function sign(xx0, xx1, xx2) {
  var cb = xx0 + xx1 + xx2 + '220120190604'
  var rb = CryptoJS.MD5(cb).toString()
  var re = []
  for (var i = 0; i < rb.length / 8; i++) re[i] = (parseInt(rb.substr(i * 8, 2), 16) & 0xff) |
    ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) | ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) |
    (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24)
  var k2 = [0x1fc7a1d5, 0xa4e5bc8, 0xdef40, 0x33afa8d0]
  for (var I = 0; I < 2; I++) {
    var v0 = re[I * 2], v1 = re[I * 2 + 1], sum = 0, i = 0
    var delta = 0x9e3779b9
    for (i = 0; i < 32; i++) {
      sum += delta
      v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1])
      v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3])
    }
    re[I * 2] = v0
    re[I * 2 + 1] = v1
  }
  re[0] -= k2[0]
  re[0] += k2[2]
  re[0] += k2[0]
  re[0] -= k2[2]
  re[1] -= k2[1]
  re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)))
  re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)))
  re[2] -= k2[0]
  re[2] = (re[2] << (k2[2] % 16)) | (re[2] >>> (32 - (k2[2] % 16)))
  re[2] = (re[2] << (k2[2] % 16)) | (re[2] >>> (32 - (k2[2] % 16)))
  re[3] += k2[1]
  re[3] = (re[3] >>> (k2[3] % 16)) | (re[3] << (32 - (k2[3] % 16)))
  re[3] -= k2[3]
  re[0] += k2[0]
  re[0] ^= k2[2]
  re[0] ^= k2[0]
  re[0] += k2[2]
  re[0] = (re[0] >>> (k2[2] % 16)) | (re[0] << (32 - (k2[2] % 16)))
  re[1] = (re[1] << (k2[1] % 16)) | (re[1] >>> (32 - (k2[1] % 16)))
  re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)))
  re[1] = (re[1] >>> (k2[1] % 16)) | (re[1] << (32 - (k2[1] % 16)))
  re[1] -= k2[3]
  re[2] = (re[2] << (k2[0] % 16)) | (re[2] >>> (32 - (k2[0] % 16)))
  re[2] ^= k2[2]
  re[2] = (re[2] << (k2[2] % 16)) | (re[2] >>> (32 - (k2[2] % 16)))
  re[2] -= k2[2]
  re[3] -= k2[1]
  re[3] = (re[3] >>> (k2[3] % 16)) | (re[3] << (32 - (k2[3] % 16)))
  re[3] = (re[3] >>> (k2[1] % 16)) | (re[3] << (32 - (k2[1] % 16)))
  re[3] += k2[3]
  {
    var hc = '0123456789abcdef'.split('')
    for (var i = 0; i < re.length; i++) {
      var j = 0, s = ''
      for (; j < 4; j++) s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15]
      re[i] = s
    }
    re = re.join('')
  }
  var rt = 'v=220120190604' + '&did=' + xx1 + '&tt=' + xx2 + '&sign=' + re
  return rt
}


let roomId = 16166
let did = '9e94b0aecbd1d2bd312c209d00001501'
let time = 1559624804 || parseInt((new Date).getTime() / 1e3, 10)
console.log(time)
console.log(sign(roomId, did, time))

