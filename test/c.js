var vdwdae325w_64we = '220120190530';
var m5fcf9f4833865c52ca490 = [
  0xa0a80764,
  0x6aa54168,
  0x574f6cbf,
  0x155c4caa,
  0xf4bed267,
  0x9a2b59ef,
  0xb3347078,
  0x869e44dd,
  0x7b00eb13,
  0x93239d50,
  0x741ba36d,
  0xd4b9c431,
  0x94bb5fc2,
  0xd59a8a86,
  0xa48ae98,
  0xb812e8bd,
  0x8d23abf0,
  0x5044ad9b,
  0x44c3e206,
  0xccdc84ab,
  0x5e4dc18d,
  0xbb99479c,
  0x80563eda,
  0xb1dedc7d,
  0x99af567c,
  0x4dea251e,
  0xda763e70,
  0x6bd12a64,
  0xfc87fba9,
  0xd1d00f43,
  0xde364de9,
  0x4d78f8b8,
  0x3c1dc865,
  0xf702b265,
  0x8818e85f,
  0xa83838c,
  0xb797d1e4,
  0xb5017ddc,
  0xa7f1481c,
  0x396859e9,
  0xea73724d,
  0x23bbec37,
  0xab9f1b3b,
  0xdacc6cf5,
  0x60f51a33,
  0x12ecde21,
  0x1e79d450,
  0x602e6b8a,
  0xa682f1e7,
  0xe4aa220,
  0x56878831,
  0x4da5873b,
  0xc62bf286,
  0xcfa9328,
  0xef5d4170,
  0xf080a7f5,
  0x6f085b52,
  0xb2aab619,
  0x3e947f7c,
  0x352cf0ad,
  0x61ad407a,
  0xfbc162af,
  0xca74812,
  0x583d4484,
  0x28293b95,
  0x84f9db88,
  0xba1d2e39,
  0x5b0fe945,
  0xa9c0d277,
  0xc7cba0da,
  0x9a8856db,
  0x56ab876b,
  0x2506deb7,
  0x64b934a2,
  0xd4d607d1,
  0xd3e97932,
  0xc523ce9b,
  0xd1758ae1,
  0xf61cabe8,
  0x9afb1419,
  0x829c18ed,
  0x8181631,
  0xf93040df,
  0xd1999241,
  0xf7acc297,
  0xb2747288,
  0xa6b34556,
  0x24c62169,
  0x1ec9b675,
  0x9a0e38eb,
  0x9590173c,
  0x95f75b2,
  0x21c28ac,
  0x38e6197c,
  0x8f4cc3cd,
  0x1d284bf4,
  0x5471e377,
  0xc6b5562d,
  0xb79bfe9b,
  0x9a88d5f8,
  0x113117a0,
  0x5fca9159,
  0xbfe71222,
  0x19d86792,
  0xb3305394,
  0x9e92e0a7,
  0x71825de5,
  0x654659ae,
  0xf39625ae,
  0xef7e43f7,
  0x476f0fcf,
  0xa136aecf,
  0x421ddb0,
  0x4d8cf869,
  0xfc1ba6da,
  0x95f0cc0b];
var m5fcf9f4833865c52ca491 = [
  0xc0a5a0be,
  0xd325257e,
  0x3c9de41a,
  0x5fb44d80,
  0x9fab99b3,
  0x85bf81f2,
  0x7a2fae9e,
  0x348b3cec,
  0xb98a1c6a,
  0x24f52d14,
  0xba63e9cc,
  0x9e902783,
  0x566ddd0d,
  0xdb910535,
  0x249e14e7,
  0xd69e0455,
  0x80cc845c,
  0xd1ec366d,
  0xde069182,
  0xf79d33c6,
  0xeebada43,
  0xef5775b7,
  0x5806306,
  0xb095bf3d,
  0x4929d3a5,
  0x7d687d59,
  0x574ab05f,
  0x30d3ba6d,
  0x68696c61,
  0xc4ae9817,
  0x2e488883,
  0x9c0311d8,
  0xc7ab739d,
  0x9fd5a8a9,
  0x78f491a7,
  0x7d32c0db,
  0x37c93ef2,
  0x3a5eb314,
  0x7a3b2b61,
  0x165fe922,
  0xfd8574a4,
  0xee682c14,
  0x92a925b0,
  0xa202990f,
  0x74c04c33,
  0x7d86f8f5,
  0x34d6a1e6,
  0x1579232d,
  0x894dd69,
  0xcb00027,
  0x433238da,
  0x11433ee7,
  0x9b499ee3,
  0xd85c7173,
  0x979518d9,
  0x2ffc5daa,
  0x2d0e9d59,
  0x788e7ac4,
  0x7f19b31e,
  0x81b7136c,
  0xda41ab4a,
  0x8445ece8,
  0xa3ab85bb,
  0x79c30812,
  0xc869b26d,
  0x3e7284a6,
  0x1430ddc4,
  0x219cf305,
  0x57c9a88b,
  0x52be0d26,
  0x69e8756a,
  0x7ece5b07,
  0x7f0e8a45,
  0xe72dedf9,
  0x84feadee,
  0xb024653,
  0xc84392e9,
  0x13053c0,
  0x68246eb5,
  0x3a9ce3bf,
  0xdc618798,
  0x2aa443a9,
  0xb5d55f82,
  0x899a371a,
  0x89c314e3,
  0xcb748de6,
  0x1a19a807,
  0x74f5ed2a,
  0xc61ed603,
  0x559fa3c6,
  0x4fc3f681,
  0x445f4f3,
  0x8961f915,
  0x8abd8b1a,
  0x1e87a255,
  0xb77e65d5,
  0x7f0ef94b,
  0x2b077e61,
  0x63fda068,
  0xcb6f30f5,
  0x8f7ab894,
  0xda4e23f0,
  0xa420f850,
  0xc808b283,
  0xc6173739,
  0x12987fd0,
  0x6b0533be,
  0x8d56a086,
  0xdd9a44cc,
  0x5e11885e,
  0xeb5a4bc9,
  0x817761de,
  0xb9673238,
  0x900e1b2f,
  0x3c6052b3,
  0xce2d69b4,
  0x88f7ed17,
  0x31b588fb,
  0x14fe31ed,
  0xbed64f1b,
  0xf4b569cc,
  0x1e6fb7f2,
  0xf1ff17fe,
  0x1c1a6357,
  0x8a100e45,
  0x5ab03dee,
  0x1f9e7b64,
  0x6ef92e41,
  0x70bf05fe,
  0xbdcc1b1b,
  0x67e75dba,
  0x6b0420ed,
  0x3e827fa4,
  0x8d8805d2];
var m5fcf9f4833865c52ca492 = [
  0x67ab326f,
  0x60b4a752,
  0xc03055e8,
  0xf9e24061,
  0x43d4b5dd,
  0xb683e761,
  0xac5cc0b9,
  0x53be1c45,
  0xb5443b7c,
  0x194bdee4,
  0xde13ddec,
  0x9e387af3,
  0x3f692b34,
  0x158544f9,
  0x8248155d,
  0x463795cb,
  0x33d26718,
  0x57af3e1b,
  0xfb5d1aad,
  0x270db931,
  0x23a7eee5,
  0xba6395fb,
  0x99391ab5,
  0xf3dc9fec,
  0xbf14f4d8,
  0x5532196a,
  0x94f08c31,
  0x348c4bd2,
  0xbfbe47fe,
  0x8c91d2a3,
  0x2b10c572,
  0x68b23005,
  0x26b61d85,
  0xffab963c,
  0xa215f989,
  0x2c719c12,
  0x970a9b29,
  0x65bbc7e4,
  0xa928af03,
  0x4d5640ee,
  0x3bf3f9db,
  0x385b5ca8,
  0xd97afa58,
  0x95a94742,
  0x3b4ac851,
  0x5cc6d258,
  0x54d48966,
  0xb844784,
  0xec74f765,
  0xaabe7461,
  0x8e888079,
  0x28f4004,
  0x499cf43e,
  0x69bc593,
  0xf007fd9c,
  0x909e9200,
  0x2a83ec94,
  0xe962f6e0,
  0x95c33db6,
  0x1301b65f,
  0xc9f0c78,
  0x60fea2be,
  0x812281de,
  0x6d621e0e,
  0x2be53ac,
  0xafc75426,
  0xe3594513,
  0xa2feb3ae,
  0xaabb50cf,
  0xdb8fb35e,
  0xc8ffd426,
  0x2f4127c1,
  0x9a019547,
  0xcbb48261,
  0xbbca5570,
  0x1fa1f7a3,
  0x9389f0ee,
  0xe47d00ec,
  0x3f81d815,
  0xed741566,
  0x2c7d22e3,
  0x2000c881,
  0x85142438,
  0x61d09139,
  0xebc3ea71,
  0xfd42b7b,
  0x7e85e64f,
  0xa3933bc,
  0xe2159c43,
  0xec947ffe,
  0x4dc23a59,
  0x3dae5fcd,
  0xc6469c56,
  0x99ad1de0,
  0xd640a29,
  0x938c31e2,
  0xf3e57bd1,
  0x94e69b51,
  0x9cb2f38,
  0xd7062010,
  0x4c86a1d9,
  0x4dfc9bed,
  0x60d907f1,
  0x8f01c545,
  0x83fd3380,
  0x32a746eb,
  0x406b01ac,
  0xddfa6036];
var m5fcf9f4833865c52ca493 = [
  0xa6e7c314,
  0x4bccd8af,
  0x1015cef0,
  0xe11bfbd0,
  0xf0d097d8,
  0xbca7b9d8,
  0x6c441282,
  0xdde33032,
  0x73ca25f6,
  0x86a3510f,
  0x59f61720,
  0x97acbebc,
  0x46295070,
  0xb1f2e996,
  0xbbc233a0,
  0x1e178146,
  0xcce926f5,
  0xb3b43328,
  0xfdcd9831,
  0x3f3c958c,
  0x249631a1,
  0x890b0059,
  0x857f11c4,
  0x49fc127a,
  0x6900b1be,
  0x14125a0c,
  0xd8f6733d,
  0x86df9b24,
  0xb744ba92,
  0x757a792e,
  0x846b3eed,
  0x3ea19dee,
  0x3e718539,
  0x965f5afb,
  0x8cc6b2a1,
  0xb0a57437,
  0x8f9418b6,
  0xeb9e6260,
  0x1db770d2,
  0xcb4d0bf8,
  0xa7db03c9,
  0x1cbf7b3,
  0x368a9cd8,
  0xcf316239,
  0xb2533148,
  0x61088a6e,
  0xe92ec09a,
  0xb6500879,
  0x45ab080b,
  0xac10b90d,
  0x97599947,
  0x1349fa16,
  0x98edb63,
  0x8e68c1e1,
  0x8b7f048a,
  0x37076124,
  0xe2f66e7b,
  0xb8f9b00d,
  0xb9a7b408,
  0x707665e0,
  0xa168b324,
  0x9fa7fed8,
  0x9dc9ef40,
  0xa1a01689,
  0x4974001a,
  0xefc9d1d4,
  0x6c57893d,
  0x407d816f,
  0x584dd88a,
  0xcd28b668,
  0x7d54b9c4,
  0x16a9e4ce,
  0x2c0610c1,
  0x89ca6f57,
  0xc4d5a490,
  0x3245e3c4,
  0x296f6c29,
  0xbf900b79,
  0x95d0e8f0,
  0x7202568e,
  0x5f8b53b9,
  0x75feddb3,
  0xe7e486c,
  0x589d60e0,
  0xb9e522ab,
  0xe32456cd,
  0x8415888a,
  0xbf032878,
  0xef94e646,
  0xe8f8c353,
  0xce06c9c0,
  0xe219aaf6,
  0xb7eae4d4,
  0xf7dcb769,
  0x4b634aa7,
  0x41a27282,
  0xada87796,
  0x44535857,
  0x790bd39a,
  0x5331abbe,
  0xce2c0e29,
  0x78cb4718,
  0x9e3973c4,
  0x4ab230ef,
  0xbad174c3,
  0x60666e22,
  0x1ad4894d,
  0x7a03839c,
  0x85bf26a6,
  0x660cb61a,
  0xe52034ad,
  0xb137e7b9,
  0xe454701f,
  0x52161664,
  0xe746de34,
  0xe2ecae02,
  0xb625782a,
  0x9478f453,
  0x66dec971,
  0x176e1ad8,
  0x4de04935,
  0x6bf263da,
  0x10d30fb2,
  0x5f419c3d];

function q7cad0d5d90(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k) {
  var rk = [
    35,
    27,
    39,
    32,
    15,
    10,
    35,
    26,
    10,
    35,
    27,
    39,
    32,
    15,
    10,
    35,
    26,
    10,
    35,
    27,
    39,
    32,
    15,
    10,
    35,
    26,
    10,
    35,
    27,
    39,
    32,
    15,
    10,
    35,
    26,
    10,
    35,
    27,
    39,
    32,
    15,
    10,
    35,
    26,
    10,
    35,
    27,
    39,
    32,
    15,
    10,
    35,
    26,
    10,
    35,
    27,
    39,
    32];
  var k2 = [0x17eead57, 0x3a2a3931];
  var lk = [0x17eead57, 0x3a2a3931];
  var v = m5fcf9f4833865c52ca490.slice(0);
  for (var O = 0; O < 116; O++) {v[O] ^= 0x618ef997;}
  v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)));
  v[0] += lk[0];
  v[3] = (v[3] >>> (lk[1] % 16)) | (v[3] << (32 - (lk[1] % 16)));
  v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16)));
  v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16)));
  v[4] ^= lk[0];
  v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16)));
  v[6] -= lk[0];
  v[9] ^= lk[1];
  v[8] += lk[0];
  v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16)));
  v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
  v[13] += lk[1];
  v[12] += lk[0];
  v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)));
  v[14] += lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)));
  v[18] += lk[0];
  v[21] = (v[21] >>> (lk[1] % 16)) | (v[21] << (32 - (lk[1] % 16)));
  v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16)));
  v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16)));
  v[22] ^= lk[0];
  v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16)));
  v[24] -= lk[0];
  v[27] ^= lk[1];
  v[26] += lk[0];
  v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16)));
  v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
  v[31] += lk[1];
  v[30] += lk[0];
  v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)));
  v[32] += lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)));
  v[36] += lk[0];
  v[39] = (v[39] >>> (lk[1] % 16)) | (v[39] << (32 - (lk[1] % 16)));
  v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16)));
  v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16)));
  v[40] ^= lk[0];
  v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16)));
  v[42] -= lk[0];
  v[45] ^= lk[1];
  v[44] += lk[0];
  v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16)));
  v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
  v[49] += lk[1];
  v[48] += lk[0];
  v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)));
  v[50] += lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)));
  v[54] += lk[0];
  v[57] = (v[57] >>> (lk[1] % 16)) | (v[57] << (32 - (lk[1] % 16)));
  v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16)));
  v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16)));
  v[58] ^= lk[0];
  v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16)));
  v[60] -= lk[0];
  v[63] ^= lk[1];
  v[62] += lk[0];
  v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16)));
  v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
  v[67] += lk[1];
  v[66] += lk[0];
  v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)));
  v[68] += lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)));
  v[72] += lk[0];
  v[75] = (v[75] >>> (lk[1] % 16)) | (v[75] << (32 - (lk[1] % 16)));
  v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16)));
  v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16)));
  v[76] ^= lk[0];
  v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16)));
  v[78] -= lk[0];
  v[81] ^= lk[1];
  v[80] += lk[0];
  v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16)));
  v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
  v[85] += lk[1];
  v[84] += lk[0];
  v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)));
  v[86] += lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)));
  v[90] += lk[0];
  v[93] = (v[93] >>> (lk[1] % 16)) | (v[93] << (32 - (lk[1] % 16)));
  v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16)));
  v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16)));
  v[94] ^= lk[0];
  v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16)));
  v[96] -= lk[0];
  v[99] ^= lk[1];
  v[98] += lk[0];
  v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16)));
  v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
  v[103] += lk[1];
  v[102] += lk[0];
  v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16)));
  v[104] += lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)));
  v[108] += lk[0];
  v[111] = (v[111] >>> (lk[1] % 16)) | (v[111] << (32 - (lk[1] % 16)));
  v[110] = (v[110] << (lk[0] % 16)) | (v[110] >>> (32 - (lk[0] % 16)));
  v[113] = (v[113] >>> (lk[1] % 16)) | (v[113] << (32 - (lk[1] % 16)));
  v[112] ^= lk[0];
  v[115] = (v[115] << (lk[1] % 16)) | (v[115] >>> (32 - (lk[1] % 16)));
  v[114] -= lk[0];
  for (var I = 0; I < 116; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 115; O > 0; O--) {v[O] ^= v[O - 1];}
  v[0] ^= 0x618ef997;
  var strc = '';
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k);
}

function q7cad0d5d91(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k) {
  var rk = [
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27,
    19,
    22,
    23,
    12,
    10,
    10,
    34,
    39,
    27];
  var k2 = [0x4bffa162, 0x1d082591];
  var lk = [0x4bffa162, 0x1d082591];
  var v = m5fcf9f4833865c52ca491.slice(0);
  for (var O = 0; O < 134; O++) {v[O] ^= 0x6d73934;}
  v[1] ^= lk[1];
  v[0] ^= lk[0];
  v[3] ^= lk[1];
  v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
  v[5] += lk[1];
  v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
  v[7] -= lk[1];
  v[6] -= lk[0];
  v[9] -= lk[1];
  v[8] ^= lk[0];
  v[11] += lk[1];
  v[10] = (v[10] >>> (lk[0] % 16)) | (v[10] << (32 - (lk[0] % 16)));
  v[13] ^= lk[1];
  v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
  v[15] += lk[1];
  v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] ^= lk[1];
  v[18] ^= lk[0];
  v[21] ^= lk[1];
  v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
  v[23] += lk[1];
  v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
  v[25] -= lk[1];
  v[24] -= lk[0];
  v[27] -= lk[1];
  v[26] ^= lk[0];
  v[29] += lk[1];
  v[28] = (v[28] >>> (lk[0] % 16)) | (v[28] << (32 - (lk[0] % 16)));
  v[31] ^= lk[1];
  v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
  v[33] += lk[1];
  v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] ^= lk[1];
  v[36] ^= lk[0];
  v[39] ^= lk[1];
  v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
  v[41] += lk[1];
  v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
  v[43] -= lk[1];
  v[42] -= lk[0];
  v[45] -= lk[1];
  v[44] ^= lk[0];
  v[47] += lk[1];
  v[46] = (v[46] >>> (lk[0] % 16)) | (v[46] << (32 - (lk[0] % 16)));
  v[49] ^= lk[1];
  v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
  v[51] += lk[1];
  v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] ^= lk[1];
  v[54] ^= lk[0];
  v[57] ^= lk[1];
  v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
  v[59] += lk[1];
  v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
  v[61] -= lk[1];
  v[60] -= lk[0];
  v[63] -= lk[1];
  v[62] ^= lk[0];
  v[65] += lk[1];
  v[64] = (v[64] >>> (lk[0] % 16)) | (v[64] << (32 - (lk[0] % 16)));
  v[67] ^= lk[1];
  v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
  v[69] += lk[1];
  v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] ^= lk[1];
  v[72] ^= lk[0];
  v[75] ^= lk[1];
  v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
  v[77] += lk[1];
  v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
  v[79] -= lk[1];
  v[78] -= lk[0];
  v[81] -= lk[1];
  v[80] ^= lk[0];
  v[83] += lk[1];
  v[82] = (v[82] >>> (lk[0] % 16)) | (v[82] << (32 - (lk[0] % 16)));
  v[85] ^= lk[1];
  v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
  v[87] += lk[1];
  v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] ^= lk[1];
  v[90] ^= lk[0];
  v[93] ^= lk[1];
  v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
  v[95] += lk[1];
  v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
  v[97] -= lk[1];
  v[96] -= lk[0];
  v[99] -= lk[1];
  v[98] ^= lk[0];
  v[101] += lk[1];
  v[100] = (v[100] >>> (lk[0] % 16)) | (v[100] << (32 - (lk[0] % 16)));
  v[103] ^= lk[1];
  v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
  v[105] += lk[1];
  v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] ^= lk[1];
  v[108] ^= lk[0];
  v[111] ^= lk[1];
  v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16)));
  v[113] += lk[1];
  v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
  v[115] -= lk[1];
  v[114] -= lk[0];
  v[117] -= lk[1];
  v[116] ^= lk[0];
  v[119] += lk[1];
  v[118] = (v[118] >>> (lk[0] % 16)) | (v[118] << (32 - (lk[0] % 16)));
  v[121] ^= lk[1];
  v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
  v[123] += lk[1];
  v[122] = (v[122] >>> (lk[0] % 16)) | (v[122] << (32 - (lk[0] % 16)));
  v[125] -= lk[1];
  v[124] -= lk[0];
  v[127] ^= lk[1];
  v[126] ^= lk[0];
  v[129] ^= lk[1];
  v[128] = (v[128] >>> (lk[0] % 16)) | (v[128] << (32 - (lk[0] % 16)));
  v[131] += lk[1];
  v[130] = (v[130] >>> (lk[0] % 16)) | (v[130] << (32 - (lk[0] % 16)));
  v[133] -= lk[1];
  v[132] -= lk[0];
  for (var I = 0; I < 134; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 133; O > 0; O--) {v[O] ^= v[O - 1];}
  v[0] ^= 0x6d73934;
  var strc = '';
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k);
}

function q7cad0d5d92(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k) {
  var rk = [
    22,
    37,
    32,
    40,
    27,
    38,
    16,
    12,
    10,
    22,
    37,
    32,
    40,
    27,
    38,
    16,
    12,
    10,
    22,
    37,
    32,
    40,
    27,
    38,
    16,
    12,
    10,
    22,
    37,
    32,
    40,
    27,
    38,
    16,
    12,
    10,
    22,
    37,
    32,
    40,
    27,
    38,
    16,
    12,
    10,
    22,
    37,
    32,
    40,
    27,
    38,
    16,
    12,
    10];
  var k2 = [0x15b1959a, 0x6a6279e0];
  var lk = [0x15b1959a, 0x6a6279e0];
  var v = m5fcf9f4833865c52ca492.slice(0);
  for (var O = 0; O < 108; O++) {v[O] ^= 0x18a2d940;}
  v[1] -= lk[1];
  v[0] += lk[0];
  v[3] ^= lk[1];
  v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
  v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16)));
  v[4] += lk[0];
  v[7] -= lk[1];
  v[6] += lk[0];
  v[9] = (v[9] << (lk[1] % 16)) | (v[9] >>> (32 - (lk[1] % 16)));
  v[8] += lk[0];
  v[11] -= lk[1];
  v[10] ^= lk[0];
  v[13] += lk[1];
  v[12] += lk[0];
  v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)));
  v[14] -= lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] -= lk[1];
  v[18] += lk[0];
  v[21] ^= lk[1];
  v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
  v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16)));
  v[22] += lk[0];
  v[25] -= lk[1];
  v[24] += lk[0];
  v[27] = (v[27] << (lk[1] % 16)) | (v[27] >>> (32 - (lk[1] % 16)));
  v[26] += lk[0];
  v[29] -= lk[1];
  v[28] ^= lk[0];
  v[31] += lk[1];
  v[30] += lk[0];
  v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)));
  v[32] -= lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] -= lk[1];
  v[36] += lk[0];
  v[39] ^= lk[1];
  v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
  v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16)));
  v[40] += lk[0];
  v[43] -= lk[1];
  v[42] += lk[0];
  v[45] = (v[45] << (lk[1] % 16)) | (v[45] >>> (32 - (lk[1] % 16)));
  v[44] += lk[0];
  v[47] -= lk[1];
  v[46] ^= lk[0];
  v[49] += lk[1];
  v[48] += lk[0];
  v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)));
  v[50] -= lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] -= lk[1];
  v[54] += lk[0];
  v[57] ^= lk[1];
  v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
  v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16)));
  v[58] += lk[0];
  v[61] -= lk[1];
  v[60] += lk[0];
  v[63] = (v[63] << (lk[1] % 16)) | (v[63] >>> (32 - (lk[1] % 16)));
  v[62] += lk[0];
  v[65] -= lk[1];
  v[64] ^= lk[0];
  v[67] += lk[1];
  v[66] += lk[0];
  v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)));
  v[68] -= lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] -= lk[1];
  v[72] += lk[0];
  v[75] ^= lk[1];
  v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
  v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16)));
  v[76] += lk[0];
  v[79] -= lk[1];
  v[78] += lk[0];
  v[81] = (v[81] << (lk[1] % 16)) | (v[81] >>> (32 - (lk[1] % 16)));
  v[80] += lk[0];
  v[83] -= lk[1];
  v[82] ^= lk[0];
  v[85] += lk[1];
  v[84] += lk[0];
  v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)));
  v[86] -= lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] -= lk[1];
  v[90] += lk[0];
  v[93] ^= lk[1];
  v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
  v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16)));
  v[94] += lk[0];
  v[97] -= lk[1];
  v[96] += lk[0];
  v[99] = (v[99] << (lk[1] % 16)) | (v[99] >>> (32 - (lk[1] % 16)));
  v[98] += lk[0];
  v[101] -= lk[1];
  v[100] ^= lk[0];
  v[103] += lk[1];
  v[102] += lk[0];
  v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16)));
  v[104] -= lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  for (var I = 0; I < 108; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 107; O > 0; O--) {v[O] ^= v[O - 1];}
  v[0] ^= 0x18a2d940;
  var strc = '';
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k);
}

function q7cad0d5d93(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k) {
  var rk = [
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15,
    10,
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15,
    10,
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15,
    10,
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15,
    10,
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15,
    10,
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15,
    10,
    34,
    28,
    15,
    13,
    15,
    32,
    38,
    15];
  var k2 = [0x4afa4acc, 0xb700213];
  var lk = [0x4afa4acc, 0xb700213];
  var v = m5fcf9f4833865c52ca493.slice(0);
  for (var O = 0; O < 124; O++) {v[O] ^= 0x199abc18;}
  v[1] += lk[1];
  v[0] ^= lk[0];
  v[3] -= lk[1];
  v[2] += lk[0];
  v[5] ^= lk[1];
  v[4] -= lk[0];
  v[7] += lk[1];
  v[6] += lk[0];
  v[9] += lk[1];
  v[8] += lk[0];
  v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
  v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
  v[13] -= lk[1];
  v[12] -= lk[0];
  v[15] ^= lk[1];
  v[14] ^= lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] += lk[1];
  v[18] ^= lk[0];
  v[21] -= lk[1];
  v[20] += lk[0];
  v[23] ^= lk[1];
  v[22] -= lk[0];
  v[25] += lk[1];
  v[24] += lk[0];
  v[27] += lk[1];
  v[26] += lk[0];
  v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
  v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
  v[31] -= lk[1];
  v[30] -= lk[0];
  v[33] ^= lk[1];
  v[32] ^= lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] += lk[1];
  v[36] ^= lk[0];
  v[39] -= lk[1];
  v[38] += lk[0];
  v[41] ^= lk[1];
  v[40] -= lk[0];
  v[43] += lk[1];
  v[42] += lk[0];
  v[45] += lk[1];
  v[44] += lk[0];
  v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
  v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
  v[49] -= lk[1];
  v[48] -= lk[0];
  v[51] ^= lk[1];
  v[50] ^= lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] += lk[1];
  v[54] ^= lk[0];
  v[57] -= lk[1];
  v[56] += lk[0];
  v[59] ^= lk[1];
  v[58] -= lk[0];
  v[61] += lk[1];
  v[60] += lk[0];
  v[63] += lk[1];
  v[62] += lk[0];
  v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
  v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
  v[67] -= lk[1];
  v[66] -= lk[0];
  v[69] ^= lk[1];
  v[68] ^= lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] += lk[1];
  v[72] ^= lk[0];
  v[75] -= lk[1];
  v[74] += lk[0];
  v[77] ^= lk[1];
  v[76] -= lk[0];
  v[79] += lk[1];
  v[78] += lk[0];
  v[81] += lk[1];
  v[80] += lk[0];
  v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
  v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
  v[85] -= lk[1];
  v[84] -= lk[0];
  v[87] ^= lk[1];
  v[86] ^= lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] += lk[1];
  v[90] ^= lk[0];
  v[93] -= lk[1];
  v[92] += lk[0];
  v[95] ^= lk[1];
  v[94] -= lk[0];
  v[97] += lk[1];
  v[96] += lk[0];
  v[99] += lk[1];
  v[98] += lk[0];
  v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
  v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
  v[103] -= lk[1];
  v[102] -= lk[0];
  v[105] ^= lk[1];
  v[104] ^= lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] += lk[1];
  v[108] ^= lk[0];
  v[111] -= lk[1];
  v[110] += lk[0];
  v[113] ^= lk[1];
  v[112] -= lk[0];
  v[115] += lk[1];
  v[114] += lk[0];
  v[117] += lk[1];
  v[116] += lk[0];
  v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
  v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16)));
  v[121] -= lk[1];
  v[120] -= lk[0];
  v[123] ^= lk[1];
  v[122] ^= lk[0];
  for (var I = 0; I < 124; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 123; O > 0; O--) {v[O] ^= v[O - 1];}
  v[0] ^= 0x199abc18;
  var strc = '';
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(y9a7g05aa74bb80, y9a7g05aa74bb81, y9a7g05aa74bb82, k);
}

/**
 * 获取直播链接
 * @param s
 * @param u  did
 * @param l  parseInt((new Date).getTime() / 1e3, 10)
 * @return {*}
 */
function ub98484234(s, u, l) {
  var rk = [
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19,
    21,
    17,
    21,
    22,
    26,
    37,
    34,
    10,
    19];
  var k2 = [0x462732fc, 0x6c06f831];
  var lk = [0x462732fc, 0x6c06f831];
  var v = ke24b52be5ac849.slice(0);
  var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
  for (var O = 0; O < 398; O++) {v[O] ^= 0x2f255382;}
  v[1] ^= lk[1];
  v[0] = (v[0] << (lk[0] % 16)) | (v[0] >>> (32 - (lk[0] % 16)));
  v[3] -= lk[1];
  v[2] ^= lk[0];
  v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16)));
  v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
  v[7] += lk[1];
  v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
  v[9] -= lk[1];
  v[8] ^= lk[0];
  v[11] -= lk[1];
  v[10] += lk[0];
  v[13] -= lk[1];
  v[12] += lk[0];
  v[15] ^= lk[1];
  v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] ^= lk[1];
  v[18] = (v[18] << (lk[0] % 16)) | (v[18] >>> (32 - (lk[0] % 16)));
  v[21] -= lk[1];
  v[20] ^= lk[0];
  v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16)));
  v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
  v[25] += lk[1];
  v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
  v[27] -= lk[1];
  v[26] ^= lk[0];
  v[29] -= lk[1];
  v[28] += lk[0];
  v[31] -= lk[1];
  v[30] += lk[0];
  v[33] ^= lk[1];
  v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] ^= lk[1];
  v[36] = (v[36] << (lk[0] % 16)) | (v[36] >>> (32 - (lk[0] % 16)));
  v[39] -= lk[1];
  v[38] ^= lk[0];
  v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16)));
  v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
  v[43] += lk[1];
  v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
  v[45] -= lk[1];
  v[44] ^= lk[0];
  v[47] -= lk[1];
  v[46] += lk[0];
  v[49] -= lk[1];
  v[48] += lk[0];
  v[51] ^= lk[1];
  v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] ^= lk[1];
  v[54] = (v[54] << (lk[0] % 16)) | (v[54] >>> (32 - (lk[0] % 16)));
  v[57] -= lk[1];
  v[56] ^= lk[0];
  v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16)));
  v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
  v[61] += lk[1];
  v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
  v[63] -= lk[1];
  v[62] ^= lk[0];
  v[65] -= lk[1];
  v[64] += lk[0];
  v[67] -= lk[1];
  v[66] += lk[0];
  v[69] ^= lk[1];
  v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] ^= lk[1];
  v[72] = (v[72] << (lk[0] % 16)) | (v[72] >>> (32 - (lk[0] % 16)));
  v[75] -= lk[1];
  v[74] ^= lk[0];
  v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16)));
  v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
  v[79] += lk[1];
  v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
  v[81] -= lk[1];
  v[80] ^= lk[0];
  v[83] -= lk[1];
  v[82] += lk[0];
  v[85] -= lk[1];
  v[84] += lk[0];
  v[87] ^= lk[1];
  v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] ^= lk[1];
  v[90] = (v[90] << (lk[0] % 16)) | (v[90] >>> (32 - (lk[0] % 16)));
  v[93] -= lk[1];
  v[92] ^= lk[0];
  v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16)));
  v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
  v[97] += lk[1];
  v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
  v[99] -= lk[1];
  v[98] ^= lk[0];
  v[101] -= lk[1];
  v[100] += lk[0];
  v[103] -= lk[1];
  v[102] += lk[0];
  v[105] ^= lk[1];
  v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] ^= lk[1];
  v[108] = (v[108] << (lk[0] % 16)) | (v[108] >>> (32 - (lk[0] % 16)));
  v[111] -= lk[1];
  v[110] ^= lk[0];
  v[113] = (v[113] << (lk[1] % 16)) | (v[113] >>> (32 - (lk[1] % 16)));
  v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
  v[115] += lk[1];
  v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
  v[117] -= lk[1];
  v[116] ^= lk[0];
  v[119] -= lk[1];
  v[118] += lk[0];
  v[121] -= lk[1];
  v[120] += lk[0];
  v[123] ^= lk[1];
  v[122] = (v[122] >>> (lk[0] % 16)) | (v[122] << (32 - (lk[0] % 16)));
  v[125] -= lk[1];
  v[124] -= lk[0];
  v[127] ^= lk[1];
  v[126] = (v[126] << (lk[0] % 16)) | (v[126] >>> (32 - (lk[0] % 16)));
  v[129] -= lk[1];
  v[128] ^= lk[0];
  v[131] = (v[131] << (lk[1] % 16)) | (v[131] >>> (32 - (lk[1] % 16)));
  v[130] = (v[130] >>> (lk[0] % 16)) | (v[130] << (32 - (lk[0] % 16)));
  v[133] += lk[1];
  v[132] = (v[132] << (lk[0] % 16)) | (v[132] >>> (32 - (lk[0] % 16)));
  v[135] -= lk[1];
  v[134] ^= lk[0];
  v[137] -= lk[1];
  v[136] += lk[0];
  v[139] -= lk[1];
  v[138] += lk[0];
  v[141] ^= lk[1];
  v[140] = (v[140] >>> (lk[0] % 16)) | (v[140] << (32 - (lk[0] % 16)));
  v[143] -= lk[1];
  v[142] -= lk[0];
  v[145] ^= lk[1];
  v[144] = (v[144] << (lk[0] % 16)) | (v[144] >>> (32 - (lk[0] % 16)));
  v[147] -= lk[1];
  v[146] ^= lk[0];
  v[149] = (v[149] << (lk[1] % 16)) | (v[149] >>> (32 - (lk[1] % 16)));
  v[148] = (v[148] >>> (lk[0] % 16)) | (v[148] << (32 - (lk[0] % 16)));
  v[151] += lk[1];
  v[150] = (v[150] << (lk[0] % 16)) | (v[150] >>> (32 - (lk[0] % 16)));
  v[153] -= lk[1];
  v[152] ^= lk[0];
  v[155] -= lk[1];
  v[154] += lk[0];
  v[157] -= lk[1];
  v[156] += lk[0];
  v[159] ^= lk[1];
  v[158] = (v[158] >>> (lk[0] % 16)) | (v[158] << (32 - (lk[0] % 16)));
  v[161] -= lk[1];
  v[160] -= lk[0];
  v[163] ^= lk[1];
  v[162] = (v[162] << (lk[0] % 16)) | (v[162] >>> (32 - (lk[0] % 16)));
  v[165] -= lk[1];
  v[164] ^= lk[0];
  v[167] = (v[167] << (lk[1] % 16)) | (v[167] >>> (32 - (lk[1] % 16)));
  v[166] = (v[166] >>> (lk[0] % 16)) | (v[166] << (32 - (lk[0] % 16)));
  v[169] += lk[1];
  v[168] = (v[168] << (lk[0] % 16)) | (v[168] >>> (32 - (lk[0] % 16)));
  v[171] -= lk[1];
  v[170] ^= lk[0];
  v[173] -= lk[1];
  v[172] += lk[0];
  v[175] -= lk[1];
  v[174] += lk[0];
  v[177] ^= lk[1];
  v[176] = (v[176] >>> (lk[0] % 16)) | (v[176] << (32 - (lk[0] % 16)));
  v[179] -= lk[1];
  v[178] -= lk[0];
  v[181] ^= lk[1];
  v[180] = (v[180] << (lk[0] % 16)) | (v[180] >>> (32 - (lk[0] % 16)));
  v[183] -= lk[1];
  v[182] ^= lk[0];
  v[185] = (v[185] << (lk[1] % 16)) | (v[185] >>> (32 - (lk[1] % 16)));
  v[184] = (v[184] >>> (lk[0] % 16)) | (v[184] << (32 - (lk[0] % 16)));
  v[187] += lk[1];
  v[186] = (v[186] << (lk[0] % 16)) | (v[186] >>> (32 - (lk[0] % 16)));
  v[189] -= lk[1];
  v[188] ^= lk[0];
  v[191] -= lk[1];
  v[190] += lk[0];
  v[193] -= lk[1];
  v[192] += lk[0];
  v[195] ^= lk[1];
  v[194] = (v[194] >>> (lk[0] % 16)) | (v[194] << (32 - (lk[0] % 16)));
  v[197] -= lk[1];
  v[196] -= lk[0];
  v[199] ^= lk[1];
  v[198] = (v[198] << (lk[0] % 16)) | (v[198] >>> (32 - (lk[0] % 16)));
  v[201] -= lk[1];
  v[200] ^= lk[0];
  v[203] = (v[203] << (lk[1] % 16)) | (v[203] >>> (32 - (lk[1] % 16)));
  v[202] = (v[202] >>> (lk[0] % 16)) | (v[202] << (32 - (lk[0] % 16)));
  v[205] += lk[1];
  v[204] = (v[204] << (lk[0] % 16)) | (v[204] >>> (32 - (lk[0] % 16)));
  v[207] -= lk[1];
  v[206] ^= lk[0];
  v[209] -= lk[1];
  v[208] += lk[0];
  v[211] -= lk[1];
  v[210] += lk[0];
  v[213] ^= lk[1];
  v[212] = (v[212] >>> (lk[0] % 16)) | (v[212] << (32 - (lk[0] % 16)));
  v[215] -= lk[1];
  v[214] -= lk[0];
  v[217] ^= lk[1];
  v[216] = (v[216] << (lk[0] % 16)) | (v[216] >>> (32 - (lk[0] % 16)));
  v[219] -= lk[1];
  v[218] ^= lk[0];
  v[221] = (v[221] << (lk[1] % 16)) | (v[221] >>> (32 - (lk[1] % 16)));
  v[220] = (v[220] >>> (lk[0] % 16)) | (v[220] << (32 - (lk[0] % 16)));
  v[223] += lk[1];
  v[222] = (v[222] << (lk[0] % 16)) | (v[222] >>> (32 - (lk[0] % 16)));
  v[225] -= lk[1];
  v[224] ^= lk[0];
  v[227] -= lk[1];
  v[226] += lk[0];
  v[229] -= lk[1];
  v[228] += lk[0];
  v[231] ^= lk[1];
  v[230] = (v[230] >>> (lk[0] % 16)) | (v[230] << (32 - (lk[0] % 16)));
  v[233] -= lk[1];
  v[232] -= lk[0];
  v[235] ^= lk[1];
  v[234] = (v[234] << (lk[0] % 16)) | (v[234] >>> (32 - (lk[0] % 16)));
  v[237] -= lk[1];
  v[236] ^= lk[0];
  v[239] = (v[239] << (lk[1] % 16)) | (v[239] >>> (32 - (lk[1] % 16)));
  v[238] = (v[238] >>> (lk[0] % 16)) | (v[238] << (32 - (lk[0] % 16)));
  v[241] += lk[1];
  v[240] = (v[240] << (lk[0] % 16)) | (v[240] >>> (32 - (lk[0] % 16)));
  v[243] -= lk[1];
  v[242] ^= lk[0];
  v[245] -= lk[1];
  v[244] += lk[0];
  v[247] -= lk[1];
  v[246] += lk[0];
  v[249] ^= lk[1];
  v[248] = (v[248] >>> (lk[0] % 16)) | (v[248] << (32 - (lk[0] % 16)));
  v[251] -= lk[1];
  v[250] -= lk[0];
  v[253] ^= lk[1];
  v[252] = (v[252] << (lk[0] % 16)) | (v[252] >>> (32 - (lk[0] % 16)));
  v[255] -= lk[1];
  v[254] ^= lk[0];
  v[257] = (v[257] << (lk[1] % 16)) | (v[257] >>> (32 - (lk[1] % 16)));
  v[256] = (v[256] >>> (lk[0] % 16)) | (v[256] << (32 - (lk[0] % 16)));
  v[259] += lk[1];
  v[258] = (v[258] << (lk[0] % 16)) | (v[258] >>> (32 - (lk[0] % 16)));
  v[261] -= lk[1];
  v[260] ^= lk[0];
  v[263] -= lk[1];
  v[262] += lk[0];
  v[265] -= lk[1];
  v[264] += lk[0];
  v[267] ^= lk[1];
  v[266] = (v[266] >>> (lk[0] % 16)) | (v[266] << (32 - (lk[0] % 16)));
  v[269] -= lk[1];
  v[268] -= lk[0];
  v[271] ^= lk[1];
  v[270] = (v[270] << (lk[0] % 16)) | (v[270] >>> (32 - (lk[0] % 16)));
  v[273] -= lk[1];
  v[272] ^= lk[0];
  v[275] = (v[275] << (lk[1] % 16)) | (v[275] >>> (32 - (lk[1] % 16)));
  v[274] = (v[274] >>> (lk[0] % 16)) | (v[274] << (32 - (lk[0] % 16)));
  v[277] += lk[1];
  v[276] = (v[276] << (lk[0] % 16)) | (v[276] >>> (32 - (lk[0] % 16)));
  v[279] -= lk[1];
  v[278] ^= lk[0];
  v[281] -= lk[1];
  v[280] += lk[0];
  v[283] -= lk[1];
  v[282] += lk[0];
  v[285] ^= lk[1];
  v[284] = (v[284] >>> (lk[0] % 16)) | (v[284] << (32 - (lk[0] % 16)));
  v[287] -= lk[1];
  v[286] -= lk[0];
  v[289] ^= lk[1];
  v[288] = (v[288] << (lk[0] % 16)) | (v[288] >>> (32 - (lk[0] % 16)));
  v[291] -= lk[1];
  v[290] ^= lk[0];
  v[293] = (v[293] << (lk[1] % 16)) | (v[293] >>> (32 - (lk[1] % 16)));
  v[292] = (v[292] >>> (lk[0] % 16)) | (v[292] << (32 - (lk[0] % 16)));
  v[295] += lk[1];
  v[294] = (v[294] << (lk[0] % 16)) | (v[294] >>> (32 - (lk[0] % 16)));
  v[297] -= lk[1];
  v[296] ^= lk[0];
  v[299] -= lk[1];
  v[298] += lk[0];
  v[301] -= lk[1];
  v[300] += lk[0];
  v[303] ^= lk[1];
  v[302] = (v[302] >>> (lk[0] % 16)) | (v[302] << (32 - (lk[0] % 16)));
  v[305] -= lk[1];
  v[304] -= lk[0];
  v[307] ^= lk[1];
  v[306] = (v[306] << (lk[0] % 16)) | (v[306] >>> (32 - (lk[0] % 16)));
  v[309] -= lk[1];
  v[308] ^= lk[0];
  v[311] = (v[311] << (lk[1] % 16)) | (v[311] >>> (32 - (lk[1] % 16)));
  v[310] = (v[310] >>> (lk[0] % 16)) | (v[310] << (32 - (lk[0] % 16)));
  v[313] += lk[1];
  v[312] = (v[312] << (lk[0] % 16)) | (v[312] >>> (32 - (lk[0] % 16)));
  v[315] -= lk[1];
  v[314] ^= lk[0];
  v[317] -= lk[1];
  v[316] += lk[0];
  v[319] -= lk[1];
  v[318] += lk[0];
  v[321] ^= lk[1];
  v[320] = (v[320] >>> (lk[0] % 16)) | (v[320] << (32 - (lk[0] % 16)));
  v[323] -= lk[1];
  v[322] -= lk[0];
  v[325] ^= lk[1];
  v[324] = (v[324] << (lk[0] % 16)) | (v[324] >>> (32 - (lk[0] % 16)));
  v[327] -= lk[1];
  v[326] ^= lk[0];
  v[329] = (v[329] << (lk[1] % 16)) | (v[329] >>> (32 - (lk[1] % 16)));
  v[328] = (v[328] >>> (lk[0] % 16)) | (v[328] << (32 - (lk[0] % 16)));
  v[331] += lk[1];
  v[330] = (v[330] << (lk[0] % 16)) | (v[330] >>> (32 - (lk[0] % 16)));
  v[333] -= lk[1];
  v[332] ^= lk[0];
  v[335] -= lk[1];
  v[334] += lk[0];
  v[337] -= lk[1];
  v[336] += lk[0];
  v[339] ^= lk[1];
  v[338] = (v[338] >>> (lk[0] % 16)) | (v[338] << (32 - (lk[0] % 16)));
  v[341] -= lk[1];
  v[340] -= lk[0];
  v[343] ^= lk[1];
  v[342] = (v[342] << (lk[0] % 16)) | (v[342] >>> (32 - (lk[0] % 16)));
  v[345] -= lk[1];
  v[344] ^= lk[0];
  v[347] = (v[347] << (lk[1] % 16)) | (v[347] >>> (32 - (lk[1] % 16)));
  v[346] = (v[346] >>> (lk[0] % 16)) | (v[346] << (32 - (lk[0] % 16)));
  v[349] += lk[1];
  v[348] = (v[348] << (lk[0] % 16)) | (v[348] >>> (32 - (lk[0] % 16)));
  v[351] -= lk[1];
  v[350] ^= lk[0];
  v[353] -= lk[1];
  v[352] += lk[0];
  v[355] -= lk[1];
  v[354] += lk[0];
  v[357] ^= lk[1];
  v[356] = (v[356] >>> (lk[0] % 16)) | (v[356] << (32 - (lk[0] % 16)));
  v[359] -= lk[1];
  v[358] -= lk[0];
  v[361] ^= lk[1];
  v[360] = (v[360] << (lk[0] % 16)) | (v[360] >>> (32 - (lk[0] % 16)));
  v[363] -= lk[1];
  v[362] ^= lk[0];
  v[365] = (v[365] << (lk[1] % 16)) | (v[365] >>> (32 - (lk[1] % 16)));
  v[364] = (v[364] >>> (lk[0] % 16)) | (v[364] << (32 - (lk[0] % 16)));
  v[367] += lk[1];
  v[366] = (v[366] << (lk[0] % 16)) | (v[366] >>> (32 - (lk[0] % 16)));
  v[369] -= lk[1];
  v[368] ^= lk[0];
  v[371] -= lk[1];
  v[370] += lk[0];
  v[373] -= lk[1];
  v[372] += lk[0];
  v[375] ^= lk[1];
  v[374] = (v[374] >>> (lk[0] % 16)) | (v[374] << (32 - (lk[0] % 16)));
  v[377] -= lk[1];
  v[376] -= lk[0];
  v[379] ^= lk[1];
  v[378] = (v[378] << (lk[0] % 16)) | (v[378] >>> (32 - (lk[0] % 16)));
  v[381] -= lk[1];
  v[380] ^= lk[0];
  v[383] = (v[383] << (lk[1] % 16)) | (v[383] >>> (32 - (lk[1] % 16)));
  v[382] = (v[382] >>> (lk[0] % 16)) | (v[382] << (32 - (lk[0] % 16)));
  v[385] += lk[1];
  v[384] = (v[384] << (lk[0] % 16)) | (v[384] >>> (32 - (lk[0] % 16)));
  v[387] -= lk[1];
  v[386] ^= lk[0];
  v[389] -= lk[1];
  v[388] += lk[0];
  v[391] -= lk[1];
  v[390] += lk[0];
  v[393] ^= lk[1];
  v[392] = (v[392] >>> (lk[0] % 16)) | (v[392] << (32 - (lk[0] % 16)));
  v[395] -= lk[1];
  v[394] -= lk[0];
  v[397] ^= lk[1];
  v[396] = (v[396] << (lk[0] % 16)) | (v[396] >>> (32 - (lk[0] % 16)));
  for (var I = 0; I < 398; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 397; O > 0; O--) {v[O] ^= v[O - 1];}
  v[0] ^= 0x2f255382;
  var strc = '';
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(s, u, l);
}

var ke24b52be5ac849 = [
  0x46d6ef45,
  0x621c61ec,
  0xc21b0c6c,
  0x40535bd8,
  0xaea08710,
  0x67c652a7,
  0x36a0fe0a,
  0xcc316499,
  0x53981f55,
  0x5c7a90d9,
  0xb352e86,
  0xc015272f,
  0xb3d1c16e,
  0x304a0ab3,
  0x8a641ea8,
  0x6c6d96a0,
  0x497a1e39,
  0xb8eeddab,
  0x562431cb,
  0xd2bc3c10,
  0x547f9945,
  0xfdcf6953,
  0xee2a746c,
  0xee89e044,
  0x524d3f9,
  0x8a34782f,
  0x321e5282,
  0x85be1b1d,
  0xe01f69c5,
  0x93931a8f,
  0x11262d8f,
  0xa407a071,
  0xdd27a970,
  0x9a4ec9eb,
  0x27fff433,
  0xe64d7067,
  0x8dc687cb,
  0x5a384396,
  0x6a2ac8ea,
  0xfab2f31c,
  0x26add2b,
  0xd4a133fb,
  0x7cf1075c,
  0x10ec9b28,
  0x431c62a4,
  0xd9da3f78,
  0xdf22dd6,
  0x8e96175a,
  0xa313bf34,
  0xa3978eb6,
  0x469c4355,
  0xb8da6615,
  0x1392ca76,
  0x867a7bd7,
  0x73f5b0c7,
  0xa976cbd8,
  0xa939e705,
  0x60f04528,
  0xeffffb25,
  0x84a35209,
  0x6f7e8ed,
  0x12b07064,
  0x617de932,
  0x417913d6,
  0x792e1dba,
  0xd7ab4a89,
  0x21b2f895,
  0xf77b8489,
  0x71c635ab,
  0x9df0fe1f,
  0xa68677c6,
  0x9e567b45,
  0xa599ace7,
  0xd495150e,
  0x7b104bcd,
  0x1d104654,
  0x6b0fd7d9,
  0xb153f501,
  0x8ce7167a,
  0x1b997402,
  0xf3f74077,
  0x12588d07,
  0x57663f4f,
  0xb80e3629,
  0xabddbba7,
  0x3eafcc0d,
  0x23aff4b7,
  0xd3f31e19,
  0x723e9cba,
  0x41d0e3cf,
  0x329a6c2e,
  0x6e5f70c2,
  0xcf2a7b7c,
  0x36864537,
  0xd5185ab0,
  0x38dc8ac0,
  0x12476fce,
  0x52287f8b,
  0x5a69ef1,
  0x26a088d8,
  0x2056e130,
  0x5588ee5f,
  0x32181be2,
  0xd111da79,
  0xf858dd0,
  0x1288763d,
  0xb90ecb0,
  0xe047ac59,
  0x2c7efb3c,
  0xf6980865,
  0xa0de4201,
  0xcf63adc6,
  0x80d2b6a5,
  0x476160,
  0xa202ed30,
  0xae608e34,
  0x469a3bb3,
  0xf66506b4,
  0xe8dafd4a,
  0x955e3b81,
  0xc31b339e,
  0x6315767a,
  0xf7b4936,
  0xd766d018,
  0x639834da,
  0x498cf24a,
  0xccac150f,
  0x3853f119,
  0xb9bce19a,
  0xe0ea34fa,
  0xac9ca14,
  0x1d1c2031,
  0xca918f8d,
  0x18e98a44,
  0x96e5c1b4,
  0xd5b1d288,
  0xe8d036e4,
  0x2b9190a,
  0xd0056bc9,
  0x657a7b46,
  0xa97adad3,
  0x4b451f48,
  0xf1aae6ae,
  0xe8b9686b,
  0x71bfa7af,
  0x5020edb5,
  0xc595aaf7,
  0x82eb0cbe,
  0x6f1acf84,
  0x831c68ed,
  0x4d8f0638,
  0xbeda4866,
  0x7ca70d2,
  0xf2dfebc1,
  0xde68d531,
  0xaaf18d12,
  0xa12a67fc,
  0xa9b6b283,
  0x298d00fd,
  0xca58e68f,
  0x87570ec7,
  0x5e993790,
  0x4933aee3,
  0x88a4d7f1,
  0xf4710fd1,
  0xb5b3c0cc,
  0x1fc57d6e,
  0x483afd8c,
  0xcf7d020e,
  0x3523a065,
  0x9ef94e9f,
  0xac0d3356,
  0x2940e463,
  0x6689e10f,
  0xa93d0b43,
  0x11c81e29,
  0x57578880,
  0xb8aef0f6,
  0x5c3343a4,
  0xdaba4958,
  0xa201b6eb,
  0x865cbb35,
  0xe2ba4cce,
  0xf70f735c,
  0x9dbe25c5,
  0xa3edb65a,
  0x50022251,
  0xe76594e0,
  0xcbb9fdc8,
  0x7d750de4,
  0x2278903e,
  0x4e5fa098,
  0x506d324b,
  0x3c290bff,
  0x8092ef55,
  0xe3e74aa9,
  0x8f11dc62,
  0xf93cd9fd,
  0x7009881b,
  0x94e9e661,
  0x420b7c7f,
  0xf05197bf,
  0xb0bd423e,
  0xcb2fa358,
  0x2307d9db,
  0xb151e58f,
  0x87569f23,
  0xea71e0c1,
  0xb48e0ba6,
  0x15761552,
  0x63c63b33,
  0xf95dfe7b,
  0xfd4e1566,
  0xe5f75ba7,
  0x47089099,
  0x81bd1fdd,
  0x69faf72b,
  0x9b0c0990,
  0x84e68261,
  0xdc6cb6d9,
  0xccf1928d,
  0xb42e14c5,
  0x386e8ae,
  0x35bc412,
  0x19b6ec87,
  0xc1e09369,
  0x650a9045,
  0x78bfb3b3,
  0xbfa1f145,
  0x6da0a11c,
  0x8eb4f764,
  0x91d54cb4,
  0xc376cd2e,
  0xdf9de2ca,
  0x9c36e35f,
  0x2d98df18,
  0xd57c00c8,
  0x5b997693,
  0x672b70d5,
  0x717c252a,
  0x8031b06f,
  0x4ad3a792,
  0x3c1c760d,
  0x6ca5a370,
  0x99cad019,
  0x5e15b60f,
  0x369a0b3d,
  0xfbab8561,
  0x6d4becb9,
  0xdd9080a3,
  0x32ee9dd8,
  0x68b12d73,
  0x5655728e,
  0x3e032a68,
  0xaa5b73dd,
  0x1cdc82e0,
  0xe182ccf8,
  0x72bf2faa,
  0xdfe6c743,
  0x242cbcdf,
  0xb71c9bcf,
  0xc85f9a6e,
  0xeba0abd4,
  0xbd5ef078,
  0xd4e14fcb,
  0xe3a3952f,
  0x5a30aa35,
  0xaf3bdc37,
  0x7ab16377,
  0xea776ebf,
  0xc726511d,
  0x3c32007a,
  0xbd17a682,
  0xf7d6d7ec,
  0x9b60d734,
  0x4f24a041,
  0xced67cd5,
  0x1a8fc64,
  0x23fd7568,
  0xb346921f,
  0x4120dadc,
  0x95321a1d,
  0x97823428,
  0x221b18a0,
  0xdc61070b,
  0x300f8926,
  0xbd0f5db3,
  0x6c0ce196,
  0xfbd0599e,
  0x47a077c8,
  0x22ea6260,
  0xc150e99f,
  0xc145e7d9,
  0x8071552d,
  0x1c14b54c,
  0x2321fc52,
  0x707b5117,
  0xbaa16df7,
  0xaab65c8c,
  0x1a4a47a4,
  0xc150d83a,
  0xca3d61b2,
  0xfa53323a,
  0xabb8a9a6,
  0x30a69d0f,
  0xa6fdac53,
  0xfc78d287,
  0x26d16b2b,
  0x24959a3a,
  0xbea72b4f,
  0xa8e0b565,
  0xc9f3d173,
  0x804a6cdd,
  0x53dcf043,
  0x630589c1,
  0xf400a7c,
  0xb29a6278,
  0xf437ecb0,
  0x5ae84a77,
  0x73ad7d1e,
  0xf29fa912,
  0xebf8a7ff,
  0x76ff610e,
  0x801b425c,
  0x253d0953,
  0xc0c9a7ae,
  0x59a6a7a6,
  0xb54ec969,
  0x9c356162,
  0x1a942f70,
  0x9603b148,
  0x7babf039,
  0xc65c57b4,
  0x1de46f9a,
  0xed8712fa,
  0x77c0f97f,
  0xfe611d83,
  0x9e7e990,
  0x29b2af5c,
  0x68d9d915,
  0x905262dd,
  0xde9c6706,
  0xe37ce76f,
  0xcfa263df,
  0x3f430ba5,
  0x89758ded,
  0xde444112,
  0xc639da7a,
  0x3e2546b9,
  0xff05bc41,
  0xac76062a,
  0xd5d39ae8,
  0xf6fe8095,
  0x85da1e3e,
  0x9ed26a3c,
  0x4603b799,
  0xa2fef19,
  0x60f4445c,
  0x9a5a3c4f,
  0xfca863d0,
  0xc8f50361,
  0x1a2bb13d,
  0xc3f5edb1,
  0xe07ec0ac,
  0x974478af,
  0xac110c7d,
  0xa1b05a49,
  0xb56cbfba,
  0xc47abf5,
  0x9fdefe71,
  0x9bf26d5a,
  0xe5a34c61,
  0x8a9cc4a0,
  0x90eaaa6b,
  0x6131964e,
  0xc1d06451,
  0xdee5e6d4,
  0x9a085215,
  0x260fc440,
  0x5955b7c2,
  0xf54ef8c0,
  0x26b2496,
  0x8d71f53e,
  0x53b5a887,
  0x57589a29,
  0xf6747a27,
  0xfe0392db,
  0x55643856,
  0xb9ba8688,
  0x7fc77c4e,
  0x3d4167ea,
  0x336d57ba,
  0xa35b7f05,
  0x638adb33,
  0xb349e018,
  0xd8d4ddec,
  0xf755a52a,
  0x6fbea48a];

function k927cea2d4369(a088jef896ed50, a088jef896ed51, a088jef896ed52, a088jef896ed53) {
  var rk = [
    32,
    17,
    22,
    25,
    16,
    18,
    31,
    26,
    10,
    32,
    17,
    22,
    25,
    16,
    18,
    31,
    26,
    10,
    32,
    17,
    22,
    25,
    16,
    18,
    31,
    26,
    10,
    32,
    17,
    22,
    25,
    16,
    18,
    31,
    26,
    10,
    32,
    17,
    22,
    25,
    16,
    18,
    31,
    26,
    10,
    32,
    17,
    22,
    25,
    16,
    18];
  var k2 = [0x127f3bcf, 0x59e592aa];
  var lk = [0x127f3bcf, 0x59e592aa];
  var v = a088jef896ed5.slice(0);
  var k = [0x174d4dc8, 0xfb8b26a6, 0x7b5a767d, 0x3b251e1f];
  for (var O = 0; O < 102; O++) {v[O] ^= 0x2c274c9b;}
  v[1] -= lk[1];
  v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16)));
  v[3] = (v[3] >>> (lk[1] % 16)) | (v[3] << (32 - (lk[1] % 16)));
  v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16)));
  v[5] ^= lk[1];
  v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
  v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)));
  v[6] += lk[0];
  v[9] ^= lk[1];
  v[8] -= lk[0];
  v[11] += lk[1];
  v[10] += lk[0];
  v[13] -= lk[1];
  v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
  v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)));
  v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] -= lk[1];
  v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16)));
  v[21] = (v[21] >>> (lk[1] % 16)) | (v[21] << (32 - (lk[1] % 16)));
  v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16)));
  v[23] ^= lk[1];
  v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
  v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)));
  v[24] += lk[0];
  v[27] ^= lk[1];
  v[26] -= lk[0];
  v[29] += lk[1];
  v[28] += lk[0];
  v[31] -= lk[1];
  v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
  v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)));
  v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] -= lk[1];
  v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16)));
  v[39] = (v[39] >>> (lk[1] % 16)) | (v[39] << (32 - (lk[1] % 16)));
  v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16)));
  v[41] ^= lk[1];
  v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
  v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)));
  v[42] += lk[0];
  v[45] ^= lk[1];
  v[44] -= lk[0];
  v[47] += lk[1];
  v[46] += lk[0];
  v[49] -= lk[1];
  v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
  v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)));
  v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] -= lk[1];
  v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16)));
  v[57] = (v[57] >>> (lk[1] % 16)) | (v[57] << (32 - (lk[1] % 16)));
  v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16)));
  v[59] ^= lk[1];
  v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
  v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)));
  v[60] += lk[0];
  v[63] ^= lk[1];
  v[62] -= lk[0];
  v[65] += lk[1];
  v[64] += lk[0];
  v[67] -= lk[1];
  v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
  v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)));
  v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] -= lk[1];
  v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16)));
  v[75] = (v[75] >>> (lk[1] % 16)) | (v[75] << (32 - (lk[1] % 16)));
  v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16)));
  v[77] ^= lk[1];
  v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
  v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)));
  v[78] += lk[0];
  v[81] ^= lk[1];
  v[80] -= lk[0];
  v[83] += lk[1];
  v[82] += lk[0];
  v[85] -= lk[1];
  v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
  v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)));
  v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] -= lk[1];
  v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16)));
  v[93] = (v[93] >>> (lk[1] % 16)) | (v[93] << (32 - (lk[1] % 16)));
  v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16)));
  v[95] ^= lk[1];
  v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
  v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)));
  v[96] += lk[0];
  v[99] ^= lk[1];
  v[98] -= lk[0];
  v[101] += lk[1];
  v[100] += lk[0];
  for (var I = 0; I < 102; I += 2) {
    var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 101; O > 0; O--) {v[O] ^= v[O - 1];}
  v[0] ^= 0x2c274c9b;
  var strc = '';
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
  }
  return eval(strc)(a088jef896ed50, 32, k, a088jef896ed51, a088jef896ed52, a088jef896ed53);
}

var a088jef896ed5 = [
  0xf4bca342,
  0xa9c88709,
  0xe6d533d5,
  0xedd53e88,
  0x979c1a71,
  0x5ec3dc60,
  0x9094d6be,
  0x6c0558ff,
  0xb37a04a5,
  0x7cb3c14a,
  0x5b67703c,
  0xf11487a6,
  0xd4029b22,
  0x94ad3ae3,
  0x50e9fd48,
  0xed824160,
  0x9c5d85c7,
  0x316c0707,
  0xba89fbd1,
  0x197d1da1,
  0x4ab3a45f,
  0x3fadd8d9,
  0x4189e202,
  0x3fd74ac0,
  0xf022102c,
  0xc28776e1,
  0xb37acecd,
  0x37898ba1,
  0x7ddd4a87,
  0xa68f5e40,
  0x7cd8699e,
  0x9d16ba6c,
  0xda35c71d,
  0x49c5d23f,
  0x34c0ffbb,
  0xd56d6c49,
  0xa2bbe7e8,
  0xf01efd96,
  0x3e463038,
  0xcf328cbe,
  0xb9d5cdb7,
  0x1f04b603,
  0x4d4a52da,
  0x638f7fd,
  0x5c415f02,
  0x75cd40fc,
  0xa4474f5,
  0xd9ca4a29,
  0x2554737,
  0x9be8280b,
  0x2096ca20,
  0x605e66c2,
  0x8ca2bde1,
  0xe4094efa,
  0x8dcae422,
  0x174456a3,
  0x93bdfbb5,
  0xfb0f5dec,
  0x2d23ff00,
  0xb123c84d,
  0xc67170ee,
  0xbf977437,
  0xccf20d12,
  0xebe390fd,
  0x586fc6c,
  0x73cb2ff1,
  0xb3d10367,
  0x177afd66,
  0xbf9fd1b3,
  0xef94ef1b,
  0x5a29c183,
  0x77d5e1ac,
  0x68302e79,
  0xaa3238e5,
  0x3ba5e079,
  0x45643aa4,
  0xdaf27080,
  0xf0df33e3,
  0xee2f00c2,
  0x3078d6ce,
  0xeefcd4e3,
  0xab559666,
  0x8a307fcf,
  0xc33bd005,
  0x36292d62,
  0xf04f2075,
  0xe6f6be52,
  0x2e7171f1,
  0x2c8b1d90,
  0x7bed8cd3,
  0x7e0e7f0c,
  0x1ecf7155,
  0x87d82d51,
  0x8b02812f,
  0x4a00849c,
  0x767e1828,
  0x567ba027,
  0x7839f4d4,
  0x5a5bfc0f,
  0x74279b4a,
  0xb075af7,
  0x1db4f09f];

// l: 288016
// s: 1
// u: 1559197472983

// h: "v=220120190530&did=57d9f117a64441b743119c6200011501&tt=1559197562&sign=2f66f8a9b35a971788824be24bb19d07&cdn=tct-h5&rate=4&ver=Douyu_219053035&iar=1&ive=0"
// l: 288016
// s: 2
// u: 1559197562245

let roomId = 288016;
let did = '57d9f117a64441b743119c6200011501';
let time = 1559198664;

function res(xx0, xx1, xx2) {
  var cb = xx0 + xx1 + xx2 + '220120190530';
  console.log(cb)
  // var rb = CryptoJS.MD5(cb).toString();
  var rb = "0123ddef258068c6630d7b26ee3382c8"
  var re = [];
  for (var i = 0; i < rb.length / 8; i++) re[i] = (parseInt(rb.substr(i * 8, 2), 16) & 0xff) |
    ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) | ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) |
    (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24);
  var k2 = [0x1a16a82b, 0x15f6f3fa, 0x499480, 0x33349a08];
  for (var I = 0; I < 2; I++) {
    var v0 = re[I * 2], v1 = re[I * 2 + 1], sum = 0, i = 0;
    var delta = 0x9e3779b9;
    for (i = 0; i < 32; i++) {
      sum += delta;
      v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1]);
      v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3]);
    }
    re[I * 2] = v0;
    re[I * 2 + 1] = v1;
  }
  re[0] = (re[0] >>> (k2[0] % 16)) | (re[0] << (32 - (k2[0] % 16)));
  re[0] ^= k2[2];
  re[0] += k2[2];
  re[1] ^= k2[1];
  re[1] += k2[3];
  re[1] += k2[1];
  re[1] = (re[1] << (k2[3] % 16)) | (re[1] >>> (32 - (k2[3] % 16)));
  re[2] = (re[2] << (k2[0] % 16)) | (re[2] >>> (32 - (k2[0] % 16)));
  re[2] = (re[2] >>> (k2[2] % 16)) | (re[2] << (32 - (k2[2] % 16)));
  re[2] = (re[2] >>> (k2[0] % 16)) | (re[2] << (32 - (k2[0] % 16)));
  re[2] = (re[2] << (k2[2] % 16)) | (re[2] >>> (32 - (k2[2] % 16)));
  re[3] = (re[3] >>> (k2[1] % 16)) | (re[3] << (32 - (k2[1] % 16)));
  re[3] -= k2[3];
  re[3] += k2[3];
  re[0] ^= k2[0];
  re[0] += k2[2];
  re[0] ^= k2[2];
  re[0] ^= k2[2];
  re[1] -= k2[1];
  re[1] += k2[3];
  re[1] -= k2[3];
  re[1] -= k2[3];
  re[2] -= k2[0];
  re[2] += k2[2];
  re[2] -= k2[2];
  re[3] = (re[3] << (k2[1] % 16)) | (re[3] >>> (32 - (k2[1] % 16)));
  re[3] ^= k2[3];
  re[3] = (re[3] << (k2[3] % 16)) | (re[3] >>> (32 - (k2[3] % 16)));
  re[3] = (re[3] >>> (k2[3] % 16)) | (re[3] << (32 - (k2[3] % 16)));
  {
    var hc = '0123456789abcdef'.split('');
    for (var i = 0; i < re.length; i++) {
      var j = 0, s = '';
      for (; j < 4; j++) s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15];
      re[i] = s;
    }
    re = re.join('');
  }
  var rt = 'v=220120190530' + '&did=' + xx1 + '&tt=' + xx2 + '&sign=' + re;
  return rt;
}
// "v=220120190530&did=57d9f117a64441b743119c6200011501&tt=1559198664&sign=e24e7781d06868565a12af19642a2ae7"
console.log(res(roomId, did, time));
